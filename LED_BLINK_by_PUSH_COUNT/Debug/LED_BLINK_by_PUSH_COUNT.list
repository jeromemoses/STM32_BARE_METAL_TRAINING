
LED_BLINK_by_PUSH_COUNT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000230  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f0  080002f0  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f0  080002f0  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  080002f0  080002f0  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f0  080002f0  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f0  080002f0  000102f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002f4  080002f4  000102f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  080002f8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000008  08000300  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  08000300  0002002c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020030  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000029b  00000000  00000000  00020073  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000f8  00000000  00000000  0002030e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00020408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  00020450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001232a  00000000  00000000  0002047d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000005db  00000000  00000000  000327a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000622ac  00000000  00000000  00032d82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000005c  00000000  00000000  00095030  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000051  00000000  00000000  0009508c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000008 	.word	0x20000008
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080002d8 	.word	0x080002d8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000000c 	.word	0x2000000c
 8000104:	080002d8 	.word	0x080002d8

08000108 <main>:
int bt_cur_state = 1;
int counter = 0;
bool Blink_flag = 0;

int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
	//Enable clock for gpio port A

	RCC->AHBENR |= GPIOAEN;
 800010e:	4b41      	ldr	r3, [pc, #260]	; (8000214 <main+0x10c>)
 8000110:	695a      	ldr	r2, [r3, #20]
 8000112:	4b40      	ldr	r3, [pc, #256]	; (8000214 <main+0x10c>)
 8000114:	2180      	movs	r1, #128	; 0x80
 8000116:	0289      	lsls	r1, r1, #10
 8000118:	430a      	orrs	r2, r1
 800011a:	615a      	str	r2, [r3, #20]
	RCC->AHBENR |= GPIOCEN;
 800011c:	4b3d      	ldr	r3, [pc, #244]	; (8000214 <main+0x10c>)
 800011e:	695a      	ldr	r2, [r3, #20]
 8000120:	4b3c      	ldr	r3, [pc, #240]	; (8000214 <main+0x10c>)
 8000122:	2180      	movs	r1, #128	; 0x80
 8000124:	0309      	lsls	r1, r1, #12
 8000126:	430a      	orrs	r2, r1
 8000128:	615a      	str	r2, [r3, #20]

	//Set direction of the GPIO pin in 5th pin in port a with MODER resiter
	GPIOA->MODER |= (1U<<10);
 800012a:	2390      	movs	r3, #144	; 0x90
 800012c:	05db      	lsls	r3, r3, #23
 800012e:	681a      	ldr	r2, [r3, #0]
 8000130:	2390      	movs	r3, #144	; 0x90
 8000132:	05db      	lsls	r3, r3, #23
 8000134:	2180      	movs	r1, #128	; 0x80
 8000136:	00c9      	lsls	r1, r1, #3
 8000138:	430a      	orrs	r2, r1
 800013a:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U<<11);
 800013c:	2390      	movs	r3, #144	; 0x90
 800013e:	05db      	lsls	r3, r3, #23
 8000140:	681a      	ldr	r2, [r3, #0]
 8000142:	2390      	movs	r3, #144	; 0x90
 8000144:	05db      	lsls	r3, r3, #23
 8000146:	4934      	ldr	r1, [pc, #208]	; (8000218 <main+0x110>)
 8000148:	400a      	ands	r2, r1
 800014a:	601a      	str	r2, [r3, #0]

	//setting the button pin as input
	GPIOC->MODER &= ~(1U<<26);
 800014c:	4b33      	ldr	r3, [pc, #204]	; (800021c <main+0x114>)
 800014e:	681a      	ldr	r2, [r3, #0]
 8000150:	4b32      	ldr	r3, [pc, #200]	; (800021c <main+0x114>)
 8000152:	4933      	ldr	r1, [pc, #204]	; (8000220 <main+0x118>)
 8000154:	400a      	ands	r2, r1
 8000156:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1U<<27);
 8000158:	4b30      	ldr	r3, [pc, #192]	; (800021c <main+0x114>)
 800015a:	681a      	ldr	r2, [r3, #0]
 800015c:	4b2f      	ldr	r3, [pc, #188]	; (800021c <main+0x114>)
 800015e:	4931      	ldr	r1, [pc, #196]	; (8000224 <main+0x11c>)
 8000160:	400a      	ands	r2, r1
 8000162:	601a      	str	r2, [r3, #0]

	while(1)
	{
		bt_prvs_state = bt_cur_state;
 8000164:	4b30      	ldr	r3, [pc, #192]	; (8000228 <main+0x120>)
 8000166:	681a      	ldr	r2, [r3, #0]
 8000168:	4b30      	ldr	r3, [pc, #192]	; (800022c <main+0x124>)
 800016a:	601a      	str	r2, [r3, #0]
		bt_cur_state = (GPIOC->IDR&=BUTTON);
 800016c:	4b2b      	ldr	r3, [pc, #172]	; (800021c <main+0x114>)
 800016e:	6919      	ldr	r1, [r3, #16]
 8000170:	4b2a      	ldr	r3, [pc, #168]	; (800021c <main+0x114>)
 8000172:	2280      	movs	r2, #128	; 0x80
 8000174:	0192      	lsls	r2, r2, #6
 8000176:	400a      	ands	r2, r1
 8000178:	611a      	str	r2, [r3, #16]
 800017a:	4b2b      	ldr	r3, [pc, #172]	; (8000228 <main+0x120>)
 800017c:	601a      	str	r2, [r3, #0]

		if(((GPIOC->IDR&=BUTTON) == 0) && (bt_prvs_state != bt_cur_state))
 800017e:	4b27      	ldr	r3, [pc, #156]	; (800021c <main+0x114>)
 8000180:	6919      	ldr	r1, [r3, #16]
 8000182:	4a26      	ldr	r2, [pc, #152]	; (800021c <main+0x114>)
 8000184:	2380      	movs	r3, #128	; 0x80
 8000186:	019b      	lsls	r3, r3, #6
 8000188:	400b      	ands	r3, r1
 800018a:	6113      	str	r3, [r2, #16]
 800018c:	d115      	bne.n	80001ba <main+0xb2>
 800018e:	4b27      	ldr	r3, [pc, #156]	; (800022c <main+0x124>)
 8000190:	681a      	ldr	r2, [r3, #0]
 8000192:	4b25      	ldr	r3, [pc, #148]	; (8000228 <main+0x120>)
 8000194:	681b      	ldr	r3, [r3, #0]
 8000196:	429a      	cmp	r2, r3
 8000198:	d00f      	beq.n	80001ba <main+0xb2>
		{
			GPIOA->ODR ^= LED;
 800019a:	2390      	movs	r3, #144	; 0x90
 800019c:	05db      	lsls	r3, r3, #23
 800019e:	695a      	ldr	r2, [r3, #20]
 80001a0:	2390      	movs	r3, #144	; 0x90
 80001a2:	05db      	lsls	r3, r3, #23
 80001a4:	2120      	movs	r1, #32
 80001a6:	404a      	eors	r2, r1
 80001a8:	615a      	str	r2, [r3, #20]
			counter += 1;
 80001aa:	4b21      	ldr	r3, [pc, #132]	; (8000230 <main+0x128>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	1c5a      	adds	r2, r3, #1
 80001b0:	4b1f      	ldr	r3, [pc, #124]	; (8000230 <main+0x128>)
 80001b2:	601a      	str	r2, [r3, #0]
			Blink_flag = 1;
 80001b4:	4b1f      	ldr	r3, [pc, #124]	; (8000234 <main+0x12c>)
 80001b6:	2201      	movs	r2, #1
 80001b8:	701a      	strb	r2, [r3, #0]
		}

		if(counter >= 11)
 80001ba:	4b1d      	ldr	r3, [pc, #116]	; (8000230 <main+0x128>)
 80001bc:	681b      	ldr	r3, [r3, #0]
 80001be:	2b0a      	cmp	r3, #10
 80001c0:	dd02      	ble.n	80001c8 <main+0xc0>
		{
			counter = 0;
 80001c2:	4b1b      	ldr	r3, [pc, #108]	; (8000230 <main+0x128>)
 80001c4:	2200      	movs	r2, #0
 80001c6:	601a      	str	r2, [r3, #0]
		}


		if( Blink_flag == 1)
 80001c8:	4b1a      	ldr	r3, [pc, #104]	; (8000234 <main+0x12c>)
 80001ca:	781b      	ldrb	r3, [r3, #0]
 80001cc:	2b00      	cmp	r3, #0
 80001ce:	d0c9      	beq.n	8000164 <main+0x5c>
		{
			for(int j = 0; j <= counter*2;j++)
 80001d0:	2300      	movs	r3, #0
 80001d2:	607b      	str	r3, [r7, #4]
 80001d4:	e014      	b.n	8000200 <main+0xf8>
			{
				GPIOA->ODR ^= LED;
 80001d6:	2390      	movs	r3, #144	; 0x90
 80001d8:	05db      	lsls	r3, r3, #23
 80001da:	695a      	ldr	r2, [r3, #20]
 80001dc:	2390      	movs	r3, #144	; 0x90
 80001de:	05db      	lsls	r3, r3, #23
 80001e0:	2120      	movs	r1, #32
 80001e2:	404a      	eors	r2, r1
 80001e4:	615a      	str	r2, [r3, #20]
				for(int i = 0;i<=75000;i++);
 80001e6:	2300      	movs	r3, #0
 80001e8:	603b      	str	r3, [r7, #0]
 80001ea:	e002      	b.n	80001f2 <main+0xea>
 80001ec:	683b      	ldr	r3, [r7, #0]
 80001ee:	3301      	adds	r3, #1
 80001f0:	603b      	str	r3, [r7, #0]
 80001f2:	683b      	ldr	r3, [r7, #0]
 80001f4:	4a10      	ldr	r2, [pc, #64]	; (8000238 <main+0x130>)
 80001f6:	4293      	cmp	r3, r2
 80001f8:	ddf8      	ble.n	80001ec <main+0xe4>
			for(int j = 0; j <= counter*2;j++)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	3301      	adds	r3, #1
 80001fe:	607b      	str	r3, [r7, #4]
 8000200:	4b0b      	ldr	r3, [pc, #44]	; (8000230 <main+0x128>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	005b      	lsls	r3, r3, #1
 8000206:	687a      	ldr	r2, [r7, #4]
 8000208:	429a      	cmp	r2, r3
 800020a:	dde4      	ble.n	80001d6 <main+0xce>
			}
			Blink_flag = 0;
 800020c:	4b09      	ldr	r3, [pc, #36]	; (8000234 <main+0x12c>)
 800020e:	2200      	movs	r2, #0
 8000210:	701a      	strb	r2, [r3, #0]
		bt_prvs_state = bt_cur_state;
 8000212:	e7a7      	b.n	8000164 <main+0x5c>
 8000214:	40021000 	.word	0x40021000
 8000218:	fffff7ff 	.word	0xfffff7ff
 800021c:	48000800 	.word	0x48000800
 8000220:	fbffffff 	.word	0xfbffffff
 8000224:	f7ffffff 	.word	0xf7ffffff
 8000228:	20000004 	.word	0x20000004
 800022c:	20000000 	.word	0x20000000
 8000230:	20000024 	.word	0x20000024
 8000234:	20000028 	.word	0x20000028
 8000238:	000124f8 	.word	0x000124f8

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	; (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000240:	e000      	b.n	8000244 <Reset_Handler+0x8>
 8000242:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480c      	ldr	r0, [pc, #48]	; (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490d      	ldr	r1, [pc, #52]	; (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0d      	ldr	r2, [pc, #52]	; (8000280 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0a      	ldr	r2, [pc, #40]	; (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0a      	ldr	r4, [pc, #40]	; (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f811 	bl	8000290 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ff4b 	bl	8000108 <main>

08000272 <LoopForever>:

LoopForever:
  b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 8000280:	080002f8 	.word	0x080002f8
  ldr r2, =_sbss
 8000284:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 8000288:	2000002c 	.word	0x2000002c

0800028c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC_COMP_IRQHandler>
	...

08000290 <__libc_init_array>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	2600      	movs	r6, #0
 8000294:	4c0c      	ldr	r4, [pc, #48]	; (80002c8 <__libc_init_array+0x38>)
 8000296:	4d0d      	ldr	r5, [pc, #52]	; (80002cc <__libc_init_array+0x3c>)
 8000298:	1b64      	subs	r4, r4, r5
 800029a:	10a4      	asrs	r4, r4, #2
 800029c:	42a6      	cmp	r6, r4
 800029e:	d109      	bne.n	80002b4 <__libc_init_array+0x24>
 80002a0:	2600      	movs	r6, #0
 80002a2:	f000 f819 	bl	80002d8 <_init>
 80002a6:	4c0a      	ldr	r4, [pc, #40]	; (80002d0 <__libc_init_array+0x40>)
 80002a8:	4d0a      	ldr	r5, [pc, #40]	; (80002d4 <__libc_init_array+0x44>)
 80002aa:	1b64      	subs	r4, r4, r5
 80002ac:	10a4      	asrs	r4, r4, #2
 80002ae:	42a6      	cmp	r6, r4
 80002b0:	d105      	bne.n	80002be <__libc_init_array+0x2e>
 80002b2:	bd70      	pop	{r4, r5, r6, pc}
 80002b4:	00b3      	lsls	r3, r6, #2
 80002b6:	58eb      	ldr	r3, [r5, r3]
 80002b8:	4798      	blx	r3
 80002ba:	3601      	adds	r6, #1
 80002bc:	e7ee      	b.n	800029c <__libc_init_array+0xc>
 80002be:	00b3      	lsls	r3, r6, #2
 80002c0:	58eb      	ldr	r3, [r5, r3]
 80002c2:	4798      	blx	r3
 80002c4:	3601      	adds	r6, #1
 80002c6:	e7f2      	b.n	80002ae <__libc_init_array+0x1e>
 80002c8:	080002f0 	.word	0x080002f0
 80002cc:	080002f0 	.word	0x080002f0
 80002d0:	080002f4 	.word	0x080002f4
 80002d4:	080002f0 	.word	0x080002f0

080002d8 <_init>:
 80002d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002da:	46c0      	nop			; (mov r8, r8)
 80002dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002de:	bc08      	pop	{r3}
 80002e0:	469e      	mov	lr, r3
 80002e2:	4770      	bx	lr

080002e4 <_fini>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	46c0      	nop			; (mov r8, r8)
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr
