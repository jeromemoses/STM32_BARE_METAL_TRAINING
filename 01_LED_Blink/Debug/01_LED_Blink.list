
01_LED_Blink.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001dc  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800029c  080002a4  000102a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800029c  0800029c  000102a4  2**0
                  CONTENTS
  4 .ARM          00000000  0800029c  0800029c  000102a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800029c  080002a4  000102a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800029c  0800029c  0001029c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002a0  080002a0  000102a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  080002a4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080002a4  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000102a4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000102cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000023f  00000000  00000000  0001030f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000000de  00000000  00000000  0001054e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  00010630  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002d  00000000  00000000  00010678  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000122f3  00000000  00000000  000106a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000005b7  00000000  00000000  00022998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0006220c  00000000  00000000  00022f4f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000058  00000000  00000000  0008515c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000046  00000000  00000000  000851b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000284 	.word	0x08000284

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000284 	.word	0x08000284

08000108 <main>:
#define LED (1U<<5)

int i=0,k=0;

int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	af00      	add	r7, sp, #0
	//Enable clock for gpio port A
	RCC->AHBENR |= GPIOAEN;
 800010c:	4b32      	ldr	r3, [pc, #200]	; (80001d8 <main+0xd0>)
 800010e:	695a      	ldr	r2, [r3, #20]
 8000110:	4b31      	ldr	r3, [pc, #196]	; (80001d8 <main+0xd0>)
 8000112:	2180      	movs	r1, #128	; 0x80
 8000114:	0289      	lsls	r1, r1, #10
 8000116:	430a      	orrs	r2, r1
 8000118:	615a      	str	r2, [r3, #20]

	//Set direction of the GPIO pin in 5th pin in port a with MODER register
	GPIOA->MODER |= (1U<<10);
 800011a:	2390      	movs	r3, #144	; 0x90
 800011c:	05db      	lsls	r3, r3, #23
 800011e:	681a      	ldr	r2, [r3, #0]
 8000120:	2390      	movs	r3, #144	; 0x90
 8000122:	05db      	lsls	r3, r3, #23
 8000124:	2180      	movs	r1, #128	; 0x80
 8000126:	00c9      	lsls	r1, r1, #3
 8000128:	430a      	orrs	r2, r1
 800012a:	601a      	str	r2, [r3, #0]
	GPIOA->MODER &= ~(1U<<11);
 800012c:	2390      	movs	r3, #144	; 0x90
 800012e:	05db      	lsls	r3, r3, #23
 8000130:	681a      	ldr	r2, [r3, #0]
 8000132:	2390      	movs	r3, #144	; 0x90
 8000134:	05db      	lsls	r3, r3, #23
 8000136:	4929      	ldr	r1, [pc, #164]	; (80001dc <main+0xd4>)
 8000138:	400a      	ands	r2, r1
 800013a:	601a      	str	r2, [r3, #0]

	while(1)
	{
		//uses ODR resiter to turn the pin HIGH and LOW
		GPIOA->ODR |= LED;
 800013c:	2390      	movs	r3, #144	; 0x90
 800013e:	05db      	lsls	r3, r3, #23
 8000140:	695a      	ldr	r2, [r3, #20]
 8000142:	2390      	movs	r3, #144	; 0x90
 8000144:	05db      	lsls	r3, r3, #23
 8000146:	2120      	movs	r1, #32
 8000148:	430a      	orrs	r2, r1
 800014a:	615a      	str	r2, [r3, #20]

		for( i = 1;i<=500;i++)
 800014c:	4b24      	ldr	r3, [pc, #144]	; (80001e0 <main+0xd8>)
 800014e:	2201      	movs	r2, #1
 8000150:	601a      	str	r2, [r3, #0]
 8000152:	e013      	b.n	800017c <main+0x74>
		{
			for( k = 0; k<=500;k++);
 8000154:	4b23      	ldr	r3, [pc, #140]	; (80001e4 <main+0xdc>)
 8000156:	2200      	movs	r2, #0
 8000158:	601a      	str	r2, [r3, #0]
 800015a:	e004      	b.n	8000166 <main+0x5e>
 800015c:	4b21      	ldr	r3, [pc, #132]	; (80001e4 <main+0xdc>)
 800015e:	681b      	ldr	r3, [r3, #0]
 8000160:	1c5a      	adds	r2, r3, #1
 8000162:	4b20      	ldr	r3, [pc, #128]	; (80001e4 <main+0xdc>)
 8000164:	601a      	str	r2, [r3, #0]
 8000166:	4b1f      	ldr	r3, [pc, #124]	; (80001e4 <main+0xdc>)
 8000168:	681a      	ldr	r2, [r3, #0]
 800016a:	23fa      	movs	r3, #250	; 0xfa
 800016c:	005b      	lsls	r3, r3, #1
 800016e:	429a      	cmp	r2, r3
 8000170:	ddf4      	ble.n	800015c <main+0x54>
		for( i = 1;i<=500;i++)
 8000172:	4b1b      	ldr	r3, [pc, #108]	; (80001e0 <main+0xd8>)
 8000174:	681b      	ldr	r3, [r3, #0]
 8000176:	1c5a      	adds	r2, r3, #1
 8000178:	4b19      	ldr	r3, [pc, #100]	; (80001e0 <main+0xd8>)
 800017a:	601a      	str	r2, [r3, #0]
 800017c:	4b18      	ldr	r3, [pc, #96]	; (80001e0 <main+0xd8>)
 800017e:	681a      	ldr	r2, [r3, #0]
 8000180:	23fa      	movs	r3, #250	; 0xfa
 8000182:	005b      	lsls	r3, r3, #1
 8000184:	429a      	cmp	r2, r3
 8000186:	dde5      	ble.n	8000154 <main+0x4c>
		}
		//turns off the LED
		GPIOA->ODR &= ~LED;
 8000188:	2390      	movs	r3, #144	; 0x90
 800018a:	05db      	lsls	r3, r3, #23
 800018c:	695a      	ldr	r2, [r3, #20]
 800018e:	2390      	movs	r3, #144	; 0x90
 8000190:	05db      	lsls	r3, r3, #23
 8000192:	2120      	movs	r1, #32
 8000194:	438a      	bics	r2, r1
 8000196:	615a      	str	r2, [r3, #20]

		for( i = 1;i<=500;i++)
 8000198:	4b11      	ldr	r3, [pc, #68]	; (80001e0 <main+0xd8>)
 800019a:	2201      	movs	r2, #1
 800019c:	601a      	str	r2, [r3, #0]
 800019e:	e013      	b.n	80001c8 <main+0xc0>
		{
			for( k = 0; k<=500;k++);
 80001a0:	4b10      	ldr	r3, [pc, #64]	; (80001e4 <main+0xdc>)
 80001a2:	2200      	movs	r2, #0
 80001a4:	601a      	str	r2, [r3, #0]
 80001a6:	e004      	b.n	80001b2 <main+0xaa>
 80001a8:	4b0e      	ldr	r3, [pc, #56]	; (80001e4 <main+0xdc>)
 80001aa:	681b      	ldr	r3, [r3, #0]
 80001ac:	1c5a      	adds	r2, r3, #1
 80001ae:	4b0d      	ldr	r3, [pc, #52]	; (80001e4 <main+0xdc>)
 80001b0:	601a      	str	r2, [r3, #0]
 80001b2:	4b0c      	ldr	r3, [pc, #48]	; (80001e4 <main+0xdc>)
 80001b4:	681a      	ldr	r2, [r3, #0]
 80001b6:	23fa      	movs	r3, #250	; 0xfa
 80001b8:	005b      	lsls	r3, r3, #1
 80001ba:	429a      	cmp	r2, r3
 80001bc:	ddf4      	ble.n	80001a8 <main+0xa0>
		for( i = 1;i<=500;i++)
 80001be:	4b08      	ldr	r3, [pc, #32]	; (80001e0 <main+0xd8>)
 80001c0:	681b      	ldr	r3, [r3, #0]
 80001c2:	1c5a      	adds	r2, r3, #1
 80001c4:	4b06      	ldr	r3, [pc, #24]	; (80001e0 <main+0xd8>)
 80001c6:	601a      	str	r2, [r3, #0]
 80001c8:	4b05      	ldr	r3, [pc, #20]	; (80001e0 <main+0xd8>)
 80001ca:	681a      	ldr	r2, [r3, #0]
 80001cc:	23fa      	movs	r3, #250	; 0xfa
 80001ce:	005b      	lsls	r3, r3, #1
 80001d0:	429a      	cmp	r2, r3
 80001d2:	dde5      	ble.n	80001a0 <main+0x98>
		GPIOA->ODR |= LED;
 80001d4:	e7b2      	b.n	800013c <main+0x34>
 80001d6:	46c0      	nop			; (mov r8, r8)
 80001d8:	40021000 	.word	0x40021000
 80001dc:	fffff7ff 	.word	0xfffff7ff
 80001e0:	2000001c 	.word	0x2000001c
 80001e4:	20000020 	.word	0x20000020

080001e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001e8:	480d      	ldr	r0, [pc, #52]	; (8000220 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001ec:	e000      	b.n	80001f0 <Reset_Handler+0x8>
 80001ee:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001f0:	480c      	ldr	r0, [pc, #48]	; (8000224 <LoopForever+0x6>)
  ldr r1, =_edata
 80001f2:	490d      	ldr	r1, [pc, #52]	; (8000228 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f4:	4a0d      	ldr	r2, [pc, #52]	; (800022c <LoopForever+0xe>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001f8:	e002      	b.n	8000200 <LoopCopyDataInit>

080001fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001fe:	3304      	adds	r3, #4

08000200 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000200:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000202:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000204:	d3f9      	bcc.n	80001fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000206:	4a0a      	ldr	r2, [pc, #40]	; (8000230 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000208:	4c0a      	ldr	r4, [pc, #40]	; (8000234 <LoopForever+0x16>)
  movs r3, #0
 800020a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800020c:	e001      	b.n	8000212 <LoopFillZerobss>

0800020e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800020e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000210:	3204      	adds	r2, #4

08000212 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000212:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000214:	d3fb      	bcc.n	800020e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000216:	f000 f811 	bl	800023c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800021a:	f7ff ff75 	bl	8000108 <main>

0800021e <LoopForever>:

LoopForever:
  b LoopForever
 800021e:	e7fe      	b.n	800021e <LoopForever>
  ldr   r0, =_estack
 8000220:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000224:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000228:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800022c:	080002a4 	.word	0x080002a4
  ldr r2, =_sbss
 8000230:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000234:	20000024 	.word	0x20000024

08000238 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000238:	e7fe      	b.n	8000238 <ADC_COMP_IRQHandler>
	...

0800023c <__libc_init_array>:
 800023c:	b570      	push	{r4, r5, r6, lr}
 800023e:	2600      	movs	r6, #0
 8000240:	4c0c      	ldr	r4, [pc, #48]	; (8000274 <__libc_init_array+0x38>)
 8000242:	4d0d      	ldr	r5, [pc, #52]	; (8000278 <__libc_init_array+0x3c>)
 8000244:	1b64      	subs	r4, r4, r5
 8000246:	10a4      	asrs	r4, r4, #2
 8000248:	42a6      	cmp	r6, r4
 800024a:	d109      	bne.n	8000260 <__libc_init_array+0x24>
 800024c:	2600      	movs	r6, #0
 800024e:	f000 f819 	bl	8000284 <_init>
 8000252:	4c0a      	ldr	r4, [pc, #40]	; (800027c <__libc_init_array+0x40>)
 8000254:	4d0a      	ldr	r5, [pc, #40]	; (8000280 <__libc_init_array+0x44>)
 8000256:	1b64      	subs	r4, r4, r5
 8000258:	10a4      	asrs	r4, r4, #2
 800025a:	42a6      	cmp	r6, r4
 800025c:	d105      	bne.n	800026a <__libc_init_array+0x2e>
 800025e:	bd70      	pop	{r4, r5, r6, pc}
 8000260:	00b3      	lsls	r3, r6, #2
 8000262:	58eb      	ldr	r3, [r5, r3]
 8000264:	4798      	blx	r3
 8000266:	3601      	adds	r6, #1
 8000268:	e7ee      	b.n	8000248 <__libc_init_array+0xc>
 800026a:	00b3      	lsls	r3, r6, #2
 800026c:	58eb      	ldr	r3, [r5, r3]
 800026e:	4798      	blx	r3
 8000270:	3601      	adds	r6, #1
 8000272:	e7f2      	b.n	800025a <__libc_init_array+0x1e>
 8000274:	0800029c 	.word	0x0800029c
 8000278:	0800029c 	.word	0x0800029c
 800027c:	080002a0 	.word	0x080002a0
 8000280:	0800029c 	.word	0x0800029c

08000284 <_init>:
 8000284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000286:	46c0      	nop			; (mov r8, r8)
 8000288:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800028a:	bc08      	pop	{r3}
 800028c:	469e      	mov	lr, r3
 800028e:	4770      	bx	lr

08000290 <_fini>:
 8000290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000292:	46c0      	nop			; (mov r8, r8)
 8000294:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000296:	bc08      	pop	{r3}
 8000298:	469e      	mov	lr, r3
 800029a:	4770      	bx	lr
