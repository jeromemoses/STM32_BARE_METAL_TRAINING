
08_Input_Interrupt_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000015e8  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000058  080016a8  080016a8  000116a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001700  08001700  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001700  08001700  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001700  08001700  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001700  08001700  00011700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001704  08001704  00011704  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001708  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001764  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001764  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001364  00000000  00000000  000200c7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000693  00000000  00000000  0002142b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000188  00000000  00000000  00021ac0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000010a  00000000  00000000  00021c48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001422f  00000000  00000000  00021d52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002040  00000000  00000000  00035f81  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00068142  00000000  00000000  00037fc1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000bf4  00000000  00000000  000a0104  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000053  00000000  00000000  000a0cf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	2000005c 	.word	0x2000005c
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08001690 	.word	0x08001690

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000060 	.word	0x20000060
 8000104:	08001690 	.word	0x08001690

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b082      	sub	sp, #8
 8000238:	af00      	add	r7, sp, #0
 800023a:	0002      	movs	r2, r0
 800023c:	1dfb      	adds	r3, r7, #7
 800023e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8000240:	1dfb      	adds	r3, r7, #7
 8000242:	781b      	ldrb	r3, [r3, #0]
 8000244:	2b7f      	cmp	r3, #127	; 0x7f
 8000246:	d809      	bhi.n	800025c <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000248:	1dfb      	adds	r3, r7, #7
 800024a:	781b      	ldrb	r3, [r3, #0]
 800024c:	001a      	movs	r2, r3
 800024e:	231f      	movs	r3, #31
 8000250:	401a      	ands	r2, r3
 8000252:	4b04      	ldr	r3, [pc, #16]	; (8000264 <__NVIC_EnableIRQ+0x30>)
 8000254:	2101      	movs	r1, #1
 8000256:	4091      	lsls	r1, r2
 8000258:	000a      	movs	r2, r1
 800025a:	601a      	str	r2, [r3, #0]
  }
}
 800025c:	46c0      	nop			; (mov r8, r8)
 800025e:	46bd      	mov	sp, r7
 8000260:	b002      	add	sp, #8
 8000262:	bd80      	pop	{r7, pc}
 8000264:	e000e100 	.word	0xe000e100

08000268 <exti_pc13_init>:
#define BUTTON 		(1U<<13)
#define MR13 		(1U<<13)
#define TR13 		(1U<<13)

void exti_pc13_init(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800026c:	b672      	cpsid	i
}
 800026e:	46c0      	nop			; (mov r8, r8)
	/*Disable global interrupt*/
	__disable_irq();

	/*Enable clock for GPIOC*/
	RCC->AHBENR |= GPIOCEN;
 8000270:	4b20      	ldr	r3, [pc, #128]	; (80002f4 <exti_pc13_init+0x8c>)
 8000272:	695a      	ldr	r2, [r3, #20]
 8000274:	4b1f      	ldr	r3, [pc, #124]	; (80002f4 <exti_pc13_init+0x8c>)
 8000276:	2180      	movs	r1, #128	; 0x80
 8000278:	0309      	lsls	r1, r1, #12
 800027a:	430a      	orrs	r2, r1
 800027c:	615a      	str	r2, [r3, #20]

	//enable clock for sysconfig
	RCC->APB2ENR |= SYSCFGEN;
 800027e:	4b1d      	ldr	r3, [pc, #116]	; (80002f4 <exti_pc13_init+0x8c>)
 8000280:	699a      	ldr	r2, [r3, #24]
 8000282:	4b1c      	ldr	r3, [pc, #112]	; (80002f4 <exti_pc13_init+0x8c>)
 8000284:	2101      	movs	r1, #1
 8000286:	430a      	orrs	r2, r1
 8000288:	619a      	str	r2, [r3, #24]

	//set GPIO PC13 as input
	GPIOC->MODER &= ~(1U<<26);
 800028a:	4b1b      	ldr	r3, [pc, #108]	; (80002f8 <exti_pc13_init+0x90>)
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b1a      	ldr	r3, [pc, #104]	; (80002f8 <exti_pc13_init+0x90>)
 8000290:	491a      	ldr	r1, [pc, #104]	; (80002fc <exti_pc13_init+0x94>)
 8000292:	400a      	ands	r2, r1
 8000294:	601a      	str	r2, [r3, #0]
	GPIOC->MODER &= ~(1U<<27);
 8000296:	4b18      	ldr	r3, [pc, #96]	; (80002f8 <exti_pc13_init+0x90>)
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	4b17      	ldr	r3, [pc, #92]	; (80002f8 <exti_pc13_init+0x90>)
 800029c:	4918      	ldr	r1, [pc, #96]	; (8000300 <exti_pc13_init+0x98>)
 800029e:	400a      	ands	r2, r1
 80002a0:	601a      	str	r2, [r3, #0]

	//pc13 should generate EXTI13
	SYSCFG->EXTICR[3] &= ~(1U<<6);
 80002a2:	4b18      	ldr	r3, [pc, #96]	; (8000304 <exti_pc13_init+0x9c>)
 80002a4:	695a      	ldr	r2, [r3, #20]
 80002a6:	4b17      	ldr	r3, [pc, #92]	; (8000304 <exti_pc13_init+0x9c>)
 80002a8:	2140      	movs	r1, #64	; 0x40
 80002aa:	438a      	bics	r2, r1
 80002ac:	615a      	str	r2, [r3, #20]
	SYSCFG->EXTICR[3] |= (1U<<5);
 80002ae:	4b15      	ldr	r3, [pc, #84]	; (8000304 <exti_pc13_init+0x9c>)
 80002b0:	695a      	ldr	r2, [r3, #20]
 80002b2:	4b14      	ldr	r3, [pc, #80]	; (8000304 <exti_pc13_init+0x9c>)
 80002b4:	2120      	movs	r1, #32
 80002b6:	430a      	orrs	r2, r1
 80002b8:	615a      	str	r2, [r3, #20]
	SYSCFG->EXTICR[3] &= ~(1U<<4);
 80002ba:	4b12      	ldr	r3, [pc, #72]	; (8000304 <exti_pc13_init+0x9c>)
 80002bc:	695a      	ldr	r2, [r3, #20]
 80002be:	4b11      	ldr	r3, [pc, #68]	; (8000304 <exti_pc13_init+0x9c>)
 80002c0:	2110      	movs	r1, #16
 80002c2:	438a      	bics	r2, r1
 80002c4:	615a      	str	r2, [r3, #20]

	//unmask PC13
	EXTI->IMR |= MR13;
 80002c6:	4b10      	ldr	r3, [pc, #64]	; (8000308 <exti_pc13_init+0xa0>)
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	4b0f      	ldr	r3, [pc, #60]	; (8000308 <exti_pc13_init+0xa0>)
 80002cc:	2180      	movs	r1, #128	; 0x80
 80002ce:	0189      	lsls	r1, r1, #6
 80002d0:	430a      	orrs	r2, r1
 80002d2:	601a      	str	r2, [r3, #0]

	//Enable falling trigger for PC13
	EXTI->FTSR |= TR13;
 80002d4:	4b0c      	ldr	r3, [pc, #48]	; (8000308 <exti_pc13_init+0xa0>)
 80002d6:	68da      	ldr	r2, [r3, #12]
 80002d8:	4b0b      	ldr	r3, [pc, #44]	; (8000308 <exti_pc13_init+0xa0>)
 80002da:	2180      	movs	r1, #128	; 0x80
 80002dc:	0189      	lsls	r1, r1, #6
 80002de:	430a      	orrs	r2, r1
 80002e0:	60da      	str	r2, [r3, #12]

	//enable the interrupt in global
	NVIC_EnableIRQ(EXTI4_15_IRQn);
 80002e2:	2007      	movs	r0, #7
 80002e4:	f7ff ffa6 	bl	8000234 <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 80002e8:	b662      	cpsie	i
}
 80002ea:	46c0      	nop			; (mov r8, r8)

	//enable the global interrupt
	__enable_irq();
}
 80002ec:	46c0      	nop			; (mov r8, r8)
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bd80      	pop	{r7, pc}
 80002f2:	46c0      	nop			; (mov r8, r8)
 80002f4:	40021000 	.word	0x40021000
 80002f8:	48000800 	.word	0x48000800
 80002fc:	fbffffff 	.word	0xfbffffff
 8000300:	f7ffffff 	.word	0xf7ffffff
 8000304:	40010000 	.word	0x40010000
 8000308:	40010400 	.word	0x40010400

0800030c <main>:
#define LED (1U<<5);

int var = 0;

int main(void)
{
 800030c:	b580      	push	{r7, lr}
 800030e:	b082      	sub	sp, #8
 8000310:	af00      	add	r7, sp, #0
	uart_init();
 8000312:	f000 f8f5 	bl	8000500 <uart_init>
	exti_pc13_init();
 8000316:	f7ff ffa7 	bl	8000268 <exti_pc13_init>

	long int counter = 0;
 800031a:	2300      	movs	r3, #0
 800031c:	607b      	str	r3, [r7, #4]
	while(1)
	{
		printf("count = %ld\r\n",counter++);
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	1c5a      	adds	r2, r3, #1
 8000322:	607a      	str	r2, [r7, #4]
 8000324:	4a09      	ldr	r2, [pc, #36]	; (800034c <main+0x40>)
 8000326:	0019      	movs	r1, r3
 8000328:	0010      	movs	r0, r2
 800032a:	f000 faab 	bl	8000884 <iprintf>
		for (var = 0; var < 54000; ++var);
 800032e:	4b08      	ldr	r3, [pc, #32]	; (8000350 <main+0x44>)
 8000330:	2200      	movs	r2, #0
 8000332:	601a      	str	r2, [r3, #0]
 8000334:	e004      	b.n	8000340 <main+0x34>
 8000336:	4b06      	ldr	r3, [pc, #24]	; (8000350 <main+0x44>)
 8000338:	681b      	ldr	r3, [r3, #0]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	4b04      	ldr	r3, [pc, #16]	; (8000350 <main+0x44>)
 800033e:	601a      	str	r2, [r3, #0]
 8000340:	4b03      	ldr	r3, [pc, #12]	; (8000350 <main+0x44>)
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	4a03      	ldr	r2, [pc, #12]	; (8000354 <main+0x48>)
 8000346:	4293      	cmp	r3, r2
 8000348:	ddf5      	ble.n	8000336 <main+0x2a>
		printf("count = %ld\r\n",counter++);
 800034a:	e7e8      	b.n	800031e <main+0x12>
 800034c:	080016a8 	.word	0x080016a8
 8000350:	20000078 	.word	0x20000078
 8000354:	0000d2ef 	.word	0x0000d2ef

08000358 <exti_callback>:
	}
}

static void exti_callback (void)
{
 8000358:	b580      	push	{r7, lr}
 800035a:	b082      	sub	sp, #8
 800035c:	af00      	add	r7, sp, #0
	GPIOA->ODR ^= LED;
 800035e:	2390      	movs	r3, #144	; 0x90
 8000360:	05db      	lsls	r3, r3, #23
 8000362:	695a      	ldr	r2, [r3, #20]
 8000364:	2390      	movs	r3, #144	; 0x90
 8000366:	05db      	lsls	r3, r3, #23
 8000368:	2120      	movs	r1, #32
 800036a:	404a      	eors	r2, r1
 800036c:	615a      	str	r2, [r3, #20]
	printf("Interrupt occurred!\r\n");
 800036e:	4b09      	ldr	r3, [pc, #36]	; (8000394 <exti_callback+0x3c>)
 8000370:	0018      	movs	r0, r3
 8000372:	f000 faed 	bl	8000950 <puts>
	for(int i = 0;i<100000;i++);
 8000376:	2300      	movs	r3, #0
 8000378:	607b      	str	r3, [r7, #4]
 800037a:	e002      	b.n	8000382 <exti_callback+0x2a>
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	3301      	adds	r3, #1
 8000380:	607b      	str	r3, [r7, #4]
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a04      	ldr	r2, [pc, #16]	; (8000398 <exti_callback+0x40>)
 8000386:	4293      	cmp	r3, r2
 8000388:	ddf8      	ble.n	800037c <exti_callback+0x24>
}
 800038a:	46c0      	nop			; (mov r8, r8)
 800038c:	46c0      	nop			; (mov r8, r8)
 800038e:	46bd      	mov	sp, r7
 8000390:	b002      	add	sp, #8
 8000392:	bd80      	pop	{r7, pc}
 8000394:	080016b8 	.word	0x080016b8
 8000398:	0001869f 	.word	0x0001869f

0800039c <EXTI4_15_IRQHandler>:

void EXTI4_15_IRQHandler(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	af00      	add	r7, sp, #0
	if((EXTI->PR & PR13) != 0)
 80003a0:	4b08      	ldr	r3, [pc, #32]	; (80003c4 <EXTI4_15_IRQHandler+0x28>)
 80003a2:	695a      	ldr	r2, [r3, #20]
 80003a4:	2380      	movs	r3, #128	; 0x80
 80003a6:	019b      	lsls	r3, r3, #6
 80003a8:	4013      	ands	r3, r2
 80003aa:	d008      	beq.n	80003be <EXTI4_15_IRQHandler+0x22>
	{
		EXTI->PR |= PR13; //clearing pr 13
 80003ac:	4b05      	ldr	r3, [pc, #20]	; (80003c4 <EXTI4_15_IRQHandler+0x28>)
 80003ae:	695a      	ldr	r2, [r3, #20]
 80003b0:	4b04      	ldr	r3, [pc, #16]	; (80003c4 <EXTI4_15_IRQHandler+0x28>)
 80003b2:	2180      	movs	r1, #128	; 0x80
 80003b4:	0189      	lsls	r1, r1, #6
 80003b6:	430a      	orrs	r2, r1
 80003b8:	615a      	str	r2, [r3, #20]

		/*do something*/
		exti_callback();
 80003ba:	f7ff ffcd 	bl	8000358 <exti_callback>
	}
}
 80003be:	46c0      	nop			; (mov r8, r8)
 80003c0:	46bd      	mov	sp, r7
 80003c2:	bd80      	pop	{r7, pc}
 80003c4:	40010400 	.word	0x40010400

080003c8 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	60f8      	str	r0, [r7, #12]
 80003d0:	60b9      	str	r1, [r7, #8]
 80003d2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d4:	2300      	movs	r3, #0
 80003d6:	617b      	str	r3, [r7, #20]
 80003d8:	e00a      	b.n	80003f0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003da:	e000      	b.n	80003de <_read+0x16>
 80003dc:	bf00      	nop
 80003de:	0001      	movs	r1, r0
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	60ba      	str	r2, [r7, #8]
 80003e6:	b2ca      	uxtb	r2, r1
 80003e8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ea:	697b      	ldr	r3, [r7, #20]
 80003ec:	3301      	adds	r3, #1
 80003ee:	617b      	str	r3, [r7, #20]
 80003f0:	697a      	ldr	r2, [r7, #20]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	429a      	cmp	r2, r3
 80003f6:	dbf0      	blt.n	80003da <_read+0x12>
  }

  return len;
 80003f8:	687b      	ldr	r3, [r7, #4]
}
 80003fa:	0018      	movs	r0, r3
 80003fc:	46bd      	mov	sp, r7
 80003fe:	b006      	add	sp, #24
 8000400:	bd80      	pop	{r7, pc}

08000402 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000402:	b580      	push	{r7, lr}
 8000404:	b086      	sub	sp, #24
 8000406:	af00      	add	r7, sp, #0
 8000408:	60f8      	str	r0, [r7, #12]
 800040a:	60b9      	str	r1, [r7, #8]
 800040c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040e:	2300      	movs	r3, #0
 8000410:	617b      	str	r3, [r7, #20]
 8000412:	e009      	b.n	8000428 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000414:	68bb      	ldr	r3, [r7, #8]
 8000416:	1c5a      	adds	r2, r3, #1
 8000418:	60ba      	str	r2, [r7, #8]
 800041a:	781b      	ldrb	r3, [r3, #0]
 800041c:	0018      	movs	r0, r3
 800041e:	f000 f935 	bl	800068c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000422:	697b      	ldr	r3, [r7, #20]
 8000424:	3301      	adds	r3, #1
 8000426:	617b      	str	r3, [r7, #20]
 8000428:	697a      	ldr	r2, [r7, #20]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	429a      	cmp	r2, r3
 800042e:	dbf1      	blt.n	8000414 <_write+0x12>
  }
  return len;
 8000430:	687b      	ldr	r3, [r7, #4]
}
 8000432:	0018      	movs	r0, r3
 8000434:	46bd      	mov	sp, r7
 8000436:	b006      	add	sp, #24
 8000438:	bd80      	pop	{r7, pc}

0800043a <_close>:

int _close(int file)
{
 800043a:	b580      	push	{r7, lr}
 800043c:	b082      	sub	sp, #8
 800043e:	af00      	add	r7, sp, #0
 8000440:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000442:	2301      	movs	r3, #1
 8000444:	425b      	negs	r3, r3
}
 8000446:	0018      	movs	r0, r3
 8000448:	46bd      	mov	sp, r7
 800044a:	b002      	add	sp, #8
 800044c:	bd80      	pop	{r7, pc}

0800044e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800044e:	b580      	push	{r7, lr}
 8000450:	b082      	sub	sp, #8
 8000452:	af00      	add	r7, sp, #0
 8000454:	6078      	str	r0, [r7, #4]
 8000456:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000458:	683b      	ldr	r3, [r7, #0]
 800045a:	2280      	movs	r2, #128	; 0x80
 800045c:	0192      	lsls	r2, r2, #6
 800045e:	605a      	str	r2, [r3, #4]
  return 0;
 8000460:	2300      	movs	r3, #0
}
 8000462:	0018      	movs	r0, r3
 8000464:	46bd      	mov	sp, r7
 8000466:	b002      	add	sp, #8
 8000468:	bd80      	pop	{r7, pc}

0800046a <_isatty>:

int _isatty(int file)
{
 800046a:	b580      	push	{r7, lr}
 800046c:	b082      	sub	sp, #8
 800046e:	af00      	add	r7, sp, #0
 8000470:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000472:	2301      	movs	r3, #1
}
 8000474:	0018      	movs	r0, r3
 8000476:	46bd      	mov	sp, r7
 8000478:	b002      	add	sp, #8
 800047a:	bd80      	pop	{r7, pc}

0800047c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800047c:	b580      	push	{r7, lr}
 800047e:	b084      	sub	sp, #16
 8000480:	af00      	add	r7, sp, #0
 8000482:	60f8      	str	r0, [r7, #12]
 8000484:	60b9      	str	r1, [r7, #8]
 8000486:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000488:	2300      	movs	r3, #0
}
 800048a:	0018      	movs	r0, r3
 800048c:	46bd      	mov	sp, r7
 800048e:	b004      	add	sp, #16
 8000490:	bd80      	pop	{r7, pc}
	...

08000494 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000494:	b580      	push	{r7, lr}
 8000496:	b086      	sub	sp, #24
 8000498:	af00      	add	r7, sp, #0
 800049a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800049c:	4a14      	ldr	r2, [pc, #80]	; (80004f0 <_sbrk+0x5c>)
 800049e:	4b15      	ldr	r3, [pc, #84]	; (80004f4 <_sbrk+0x60>)
 80004a0:	1ad3      	subs	r3, r2, r3
 80004a2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004a4:	697b      	ldr	r3, [r7, #20]
 80004a6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004a8:	4b13      	ldr	r3, [pc, #76]	; (80004f8 <_sbrk+0x64>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	2b00      	cmp	r3, #0
 80004ae:	d102      	bne.n	80004b6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004b0:	4b11      	ldr	r3, [pc, #68]	; (80004f8 <_sbrk+0x64>)
 80004b2:	4a12      	ldr	r2, [pc, #72]	; (80004fc <_sbrk+0x68>)
 80004b4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004b6:	4b10      	ldr	r3, [pc, #64]	; (80004f8 <_sbrk+0x64>)
 80004b8:	681a      	ldr	r2, [r3, #0]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	18d3      	adds	r3, r2, r3
 80004be:	693a      	ldr	r2, [r7, #16]
 80004c0:	429a      	cmp	r2, r3
 80004c2:	d207      	bcs.n	80004d4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004c4:	f000 fb96 	bl	8000bf4 <__errno>
 80004c8:	0003      	movs	r3, r0
 80004ca:	220c      	movs	r2, #12
 80004cc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ce:	2301      	movs	r3, #1
 80004d0:	425b      	negs	r3, r3
 80004d2:	e009      	b.n	80004e8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004d4:	4b08      	ldr	r3, [pc, #32]	; (80004f8 <_sbrk+0x64>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004da:	4b07      	ldr	r3, [pc, #28]	; (80004f8 <_sbrk+0x64>)
 80004dc:	681a      	ldr	r2, [r3, #0]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	18d2      	adds	r2, r2, r3
 80004e2:	4b05      	ldr	r3, [pc, #20]	; (80004f8 <_sbrk+0x64>)
 80004e4:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80004e6:	68fb      	ldr	r3, [r7, #12]
}
 80004e8:	0018      	movs	r0, r3
 80004ea:	46bd      	mov	sp, r7
 80004ec:	b006      	add	sp, #24
 80004ee:	bd80      	pop	{r7, pc}
 80004f0:	20008000 	.word	0x20008000
 80004f4:	00000400 	.word	0x00000400
 80004f8:	2000007c 	.word	0x2000007c
 80004fc:	200001d0 	.word	0x200001d0

08000500 <uart_init>:
#define RXNE		(1U<<5)

int blink_flag = 0;

void uart_init(void)
{
 8000500:	b580      	push	{r7, lr}
 8000502:	af00      	add	r7, sp, #0
	//set clock to GPIO A port
		RCC->AHBENR |= GPIOAEN;
 8000504:	4b4d      	ldr	r3, [pc, #308]	; (800063c <uart_init+0x13c>)
 8000506:	695a      	ldr	r2, [r3, #20]
 8000508:	4b4c      	ldr	r3, [pc, #304]	; (800063c <uart_init+0x13c>)
 800050a:	2180      	movs	r1, #128	; 0x80
 800050c:	0289      	lsls	r1, r1, #10
 800050e:	430a      	orrs	r2, r1
 8000510:	615a      	str	r2, [r3, #20]

		//setting PA2 (UART TX pins) as for alternative function for UART pin
		GPIOA->MODER |= (1U<<5);
 8000512:	2390      	movs	r3, #144	; 0x90
 8000514:	05db      	lsls	r3, r3, #23
 8000516:	681a      	ldr	r2, [r3, #0]
 8000518:	2390      	movs	r3, #144	; 0x90
 800051a:	05db      	lsls	r3, r3, #23
 800051c:	2120      	movs	r1, #32
 800051e:	430a      	orrs	r2, r1
 8000520:	601a      	str	r2, [r3, #0]
		GPIOA->MODER &= ~(1U<<4);
 8000522:	2390      	movs	r3, #144	; 0x90
 8000524:	05db      	lsls	r3, r3, #23
 8000526:	681a      	ldr	r2, [r3, #0]
 8000528:	2390      	movs	r3, #144	; 0x90
 800052a:	05db      	lsls	r3, r3, #23
 800052c:	2110      	movs	r1, #16
 800052e:	438a      	bics	r2, r1
 8000530:	601a      	str	r2, [r3, #0]

		//setting PA3 (UART RX pins) as for alternative function for UART pin
		GPIOA->MODER |= (1U<<7);
 8000532:	2390      	movs	r3, #144	; 0x90
 8000534:	05db      	lsls	r3, r3, #23
 8000536:	681a      	ldr	r2, [r3, #0]
 8000538:	2390      	movs	r3, #144	; 0x90
 800053a:	05db      	lsls	r3, r3, #23
 800053c:	2180      	movs	r1, #128	; 0x80
 800053e:	430a      	orrs	r2, r1
 8000540:	601a      	str	r2, [r3, #0]
		GPIOA->MODER &= ~(1U<<6);
 8000542:	2390      	movs	r3, #144	; 0x90
 8000544:	05db      	lsls	r3, r3, #23
 8000546:	681a      	ldr	r2, [r3, #0]
 8000548:	2390      	movs	r3, #144	; 0x90
 800054a:	05db      	lsls	r3, r3, #23
 800054c:	2140      	movs	r1, #64	; 0x40
 800054e:	438a      	bics	r2, r1
 8000550:	601a      	str	r2, [r3, #0]

		//Setting GPIOA - Pin 5 as a output with moder Register
		GPIOA->MODER |= (1U << 10);
 8000552:	2390      	movs	r3, #144	; 0x90
 8000554:	05db      	lsls	r3, r3, #23
 8000556:	681a      	ldr	r2, [r3, #0]
 8000558:	2390      	movs	r3, #144	; 0x90
 800055a:	05db      	lsls	r3, r3, #23
 800055c:	2180      	movs	r1, #128	; 0x80
 800055e:	00c9      	lsls	r1, r1, #3
 8000560:	430a      	orrs	r2, r1
 8000562:	601a      	str	r2, [r3, #0]
		GPIOA->MODER &= ~(1U << 11);
 8000564:	2390      	movs	r3, #144	; 0x90
 8000566:	05db      	lsls	r3, r3, #23
 8000568:	681a      	ldr	r2, [r3, #0]
 800056a:	2390      	movs	r3, #144	; 0x90
 800056c:	05db      	lsls	r3, r3, #23
 800056e:	4934      	ldr	r1, [pc, #208]	; (8000640 <uart_init+0x140>)
 8000570:	400a      	ands	r2, r1
 8000572:	601a      	str	r2, [r3, #0]

		//Setting PA2 as UART2 TX
		GPIOA->AFR[0] &= ~(1U<<11);
 8000574:	2390      	movs	r3, #144	; 0x90
 8000576:	05db      	lsls	r3, r3, #23
 8000578:	6a1a      	ldr	r2, [r3, #32]
 800057a:	2390      	movs	r3, #144	; 0x90
 800057c:	05db      	lsls	r3, r3, #23
 800057e:	4930      	ldr	r1, [pc, #192]	; (8000640 <uart_init+0x140>)
 8000580:	400a      	ands	r2, r1
 8000582:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] &= ~(1U<<10);
 8000584:	2390      	movs	r3, #144	; 0x90
 8000586:	05db      	lsls	r3, r3, #23
 8000588:	6a1a      	ldr	r2, [r3, #32]
 800058a:	2390      	movs	r3, #144	; 0x90
 800058c:	05db      	lsls	r3, r3, #23
 800058e:	492d      	ldr	r1, [pc, #180]	; (8000644 <uart_init+0x144>)
 8000590:	400a      	ands	r2, r1
 8000592:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] &= ~(1U<<9);
 8000594:	2390      	movs	r3, #144	; 0x90
 8000596:	05db      	lsls	r3, r3, #23
 8000598:	6a1a      	ldr	r2, [r3, #32]
 800059a:	2390      	movs	r3, #144	; 0x90
 800059c:	05db      	lsls	r3, r3, #23
 800059e:	492a      	ldr	r1, [pc, #168]	; (8000648 <uart_init+0x148>)
 80005a0:	400a      	ands	r2, r1
 80005a2:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] |= (1U<<8);
 80005a4:	2390      	movs	r3, #144	; 0x90
 80005a6:	05db      	lsls	r3, r3, #23
 80005a8:	6a1a      	ldr	r2, [r3, #32]
 80005aa:	2390      	movs	r3, #144	; 0x90
 80005ac:	05db      	lsls	r3, r3, #23
 80005ae:	2180      	movs	r1, #128	; 0x80
 80005b0:	0049      	lsls	r1, r1, #1
 80005b2:	430a      	orrs	r2, r1
 80005b4:	621a      	str	r2, [r3, #32]

		//Setting PA3 as UART2 RX
		GPIOA->AFR[0] &= ~(1U<<15);
 80005b6:	2390      	movs	r3, #144	; 0x90
 80005b8:	05db      	lsls	r3, r3, #23
 80005ba:	6a1a      	ldr	r2, [r3, #32]
 80005bc:	2390      	movs	r3, #144	; 0x90
 80005be:	05db      	lsls	r3, r3, #23
 80005c0:	4922      	ldr	r1, [pc, #136]	; (800064c <uart_init+0x14c>)
 80005c2:	400a      	ands	r2, r1
 80005c4:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] &= ~(1U<<14);
 80005c6:	2390      	movs	r3, #144	; 0x90
 80005c8:	05db      	lsls	r3, r3, #23
 80005ca:	6a1a      	ldr	r2, [r3, #32]
 80005cc:	2390      	movs	r3, #144	; 0x90
 80005ce:	05db      	lsls	r3, r3, #23
 80005d0:	491f      	ldr	r1, [pc, #124]	; (8000650 <uart_init+0x150>)
 80005d2:	400a      	ands	r2, r1
 80005d4:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] &= ~(1U<<13);
 80005d6:	2390      	movs	r3, #144	; 0x90
 80005d8:	05db      	lsls	r3, r3, #23
 80005da:	6a1a      	ldr	r2, [r3, #32]
 80005dc:	2390      	movs	r3, #144	; 0x90
 80005de:	05db      	lsls	r3, r3, #23
 80005e0:	491c      	ldr	r1, [pc, #112]	; (8000654 <uart_init+0x154>)
 80005e2:	400a      	ands	r2, r1
 80005e4:	621a      	str	r2, [r3, #32]
		GPIOA->AFR[0] |= (1U<<12);
 80005e6:	2390      	movs	r3, #144	; 0x90
 80005e8:	05db      	lsls	r3, r3, #23
 80005ea:	6a1a      	ldr	r2, [r3, #32]
 80005ec:	2390      	movs	r3, #144	; 0x90
 80005ee:	05db      	lsls	r3, r3, #23
 80005f0:	2180      	movs	r1, #128	; 0x80
 80005f2:	0149      	lsls	r1, r1, #5
 80005f4:	430a      	orrs	r2, r1
 80005f6:	621a      	str	r2, [r3, #32]

		//setting clock to Advanced peripheral bus for USART
		RCC->APB1ENR |= USART2EN;
 80005f8:	4b10      	ldr	r3, [pc, #64]	; (800063c <uart_init+0x13c>)
 80005fa:	69da      	ldr	r2, [r3, #28]
 80005fc:	4b0f      	ldr	r3, [pc, #60]	; (800063c <uart_init+0x13c>)
 80005fe:	2180      	movs	r1, #128	; 0x80
 8000600:	0289      	lsls	r1, r1, #10
 8000602:	430a      	orrs	r2, r1
 8000604:	61da      	str	r2, [r3, #28]
		 * baudrate = Fclk / USARTDIV
		 *
		 * */

		//sets the baud rate
		USART2->BRR |= (periphCLK / BAUDRATE);//(periphCLK + (BAUDRATE/2)) / BAUDRATE;
 8000606:	4b14      	ldr	r3, [pc, #80]	; (8000658 <uart_init+0x158>)
 8000608:	68da      	ldr	r2, [r3, #12]
 800060a:	4b13      	ldr	r3, [pc, #76]	; (8000658 <uart_init+0x158>)
 800060c:	2145      	movs	r1, #69	; 0x45
 800060e:	430a      	orrs	r2, r1
 8000610:	60da      	str	r2, [r3, #12]

		//Enable transmitter
		USART2->CR1 |= TE;
 8000612:	4b11      	ldr	r3, [pc, #68]	; (8000658 <uart_init+0x158>)
 8000614:	681a      	ldr	r2, [r3, #0]
 8000616:	4b10      	ldr	r3, [pc, #64]	; (8000658 <uart_init+0x158>)
 8000618:	2108      	movs	r1, #8
 800061a:	430a      	orrs	r2, r1
 800061c:	601a      	str	r2, [r3, #0]

		//Enable receiver
		USART2->CR1 |= RE;
 800061e:	4b0e      	ldr	r3, [pc, #56]	; (8000658 <uart_init+0x158>)
 8000620:	681a      	ldr	r2, [r3, #0]
 8000622:	4b0d      	ldr	r3, [pc, #52]	; (8000658 <uart_init+0x158>)
 8000624:	2104      	movs	r1, #4
 8000626:	430a      	orrs	r2, r1
 8000628:	601a      	str	r2, [r3, #0]

		//Enable the USART2
		USART2->CR1 |= UE;
 800062a:	4b0b      	ldr	r3, [pc, #44]	; (8000658 <uart_init+0x158>)
 800062c:	681a      	ldr	r2, [r3, #0]
 800062e:	4b0a      	ldr	r3, [pc, #40]	; (8000658 <uart_init+0x158>)
 8000630:	2101      	movs	r1, #1
 8000632:	430a      	orrs	r2, r1
 8000634:	601a      	str	r2, [r3, #0]
}
 8000636:	46c0      	nop			; (mov r8, r8)
 8000638:	46bd      	mov	sp, r7
 800063a:	bd80      	pop	{r7, pc}
 800063c:	40021000 	.word	0x40021000
 8000640:	fffff7ff 	.word	0xfffff7ff
 8000644:	fffffbff 	.word	0xfffffbff
 8000648:	fffffdff 	.word	0xfffffdff
 800064c:	ffff7fff 	.word	0xffff7fff
 8000650:	ffffbfff 	.word	0xffffbfff
 8000654:	ffffdfff 	.word	0xffffdfff
 8000658:	40004400 	.word	0x40004400

0800065c <uart_write>:

void uart_write(int ch)
{
 800065c:	b580      	push	{r7, lr}
 800065e:	b082      	sub	sp, #8
 8000660:	af00      	add	r7, sp, #0
 8000662:	6078      	str	r0, [r7, #4]
	//waits until the TXE becomes 1
	while ((USART2->ISR & TXE) == 0);
 8000664:	46c0      	nop			; (mov r8, r8)
 8000666:	4b08      	ldr	r3, [pc, #32]	; (8000688 <uart_write+0x2c>)
 8000668:	69db      	ldr	r3, [r3, #28]
 800066a:	2280      	movs	r2, #128	; 0x80
 800066c:	4013      	ands	r3, r2
 800066e:	d0fa      	beq.n	8000666 <uart_write+0xa>

	USART2->TDR = (ch & 0xff);
 8000670:	687b      	ldr	r3, [r7, #4]
 8000672:	b29b      	uxth	r3, r3
 8000674:	4a04      	ldr	r2, [pc, #16]	; (8000688 <uart_write+0x2c>)
 8000676:	21ff      	movs	r1, #255	; 0xff
 8000678:	400b      	ands	r3, r1
 800067a:	b29b      	uxth	r3, r3
 800067c:	8513      	strh	r3, [r2, #40]	; 0x28
}
 800067e:	46c0      	nop			; (mov r8, r8)
 8000680:	46bd      	mov	sp, r7
 8000682:	b002      	add	sp, #8
 8000684:	bd80      	pop	{r7, pc}
 8000686:	46c0      	nop			; (mov r8, r8)
 8000688:	40004400 	.word	0x40004400

0800068c <__io_putchar>:
{
	return blink_flag;
}

int __io_putchar(int ch)
{
 800068c:	b580      	push	{r7, lr}
 800068e:	b082      	sub	sp, #8
 8000690:	af00      	add	r7, sp, #0
 8000692:	6078      	str	r0, [r7, #4]
	uart_write(ch);
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	0018      	movs	r0, r3
 8000698:	f7ff ffe0 	bl	800065c <uart_write>
	return ch;
 800069c:	687b      	ldr	r3, [r7, #4]
}
 800069e:	0018      	movs	r0, r3
 80006a0:	46bd      	mov	sp, r7
 80006a2:	b002      	add	sp, #8
 80006a4:	bd80      	pop	{r7, pc}
	...

080006a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006a8:	480d      	ldr	r0, [pc, #52]	; (80006e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006ac:	e000      	b.n	80006b0 <Reset_Handler+0x8>
 80006ae:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b0:	480c      	ldr	r0, [pc, #48]	; (80006e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80006b2:	490d      	ldr	r1, [pc, #52]	; (80006e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b4:	4a0d      	ldr	r2, [pc, #52]	; (80006ec <LoopForever+0xe>)
  movs r3, #0
 80006b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006b8:	e002      	b.n	80006c0 <LoopCopyDataInit>

080006ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006be:	3304      	adds	r3, #4

080006c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006c4:	d3f9      	bcc.n	80006ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006c6:	4a0a      	ldr	r2, [pc, #40]	; (80006f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006c8:	4c0a      	ldr	r4, [pc, #40]	; (80006f4 <LoopForever+0x16>)
  movs r3, #0
 80006ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006cc:	e001      	b.n	80006d2 <LoopFillZerobss>

080006ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d0:	3204      	adds	r2, #4

080006d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d4:	d3fb      	bcc.n	80006ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006d6:	f000 fa93 	bl	8000c00 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006da:	f7ff fe17 	bl	800030c <main>

080006de <LoopForever>:

LoopForever:
  b LoopForever
 80006de:	e7fe      	b.n	80006de <LoopForever>
  ldr   r0, =_estack
 80006e0:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80006e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006e8:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80006ec:	08001708 	.word	0x08001708
  ldr r2, =_sbss
 80006f0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80006f4:	200001cc 	.word	0x200001cc

080006f8 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006f8:	e7fe      	b.n	80006f8 <ADC_COMP_IRQHandler>
	...

080006fc <std>:
 80006fc:	2300      	movs	r3, #0
 80006fe:	b510      	push	{r4, lr}
 8000700:	0004      	movs	r4, r0
 8000702:	6003      	str	r3, [r0, #0]
 8000704:	6043      	str	r3, [r0, #4]
 8000706:	6083      	str	r3, [r0, #8]
 8000708:	8181      	strh	r1, [r0, #12]
 800070a:	6643      	str	r3, [r0, #100]	; 0x64
 800070c:	81c2      	strh	r2, [r0, #14]
 800070e:	6103      	str	r3, [r0, #16]
 8000710:	6143      	str	r3, [r0, #20]
 8000712:	6183      	str	r3, [r0, #24]
 8000714:	0019      	movs	r1, r3
 8000716:	2208      	movs	r2, #8
 8000718:	305c      	adds	r0, #92	; 0x5c
 800071a:	f000 fa15 	bl	8000b48 <memset>
 800071e:	4b0b      	ldr	r3, [pc, #44]	; (800074c <std+0x50>)
 8000720:	6224      	str	r4, [r4, #32]
 8000722:	6263      	str	r3, [r4, #36]	; 0x24
 8000724:	4b0a      	ldr	r3, [pc, #40]	; (8000750 <std+0x54>)
 8000726:	62a3      	str	r3, [r4, #40]	; 0x28
 8000728:	4b0a      	ldr	r3, [pc, #40]	; (8000754 <std+0x58>)
 800072a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800072c:	4b0a      	ldr	r3, [pc, #40]	; (8000758 <std+0x5c>)
 800072e:	6323      	str	r3, [r4, #48]	; 0x30
 8000730:	4b0a      	ldr	r3, [pc, #40]	; (800075c <std+0x60>)
 8000732:	429c      	cmp	r4, r3
 8000734:	d005      	beq.n	8000742 <std+0x46>
 8000736:	4b0a      	ldr	r3, [pc, #40]	; (8000760 <std+0x64>)
 8000738:	429c      	cmp	r4, r3
 800073a:	d002      	beq.n	8000742 <std+0x46>
 800073c:	4b09      	ldr	r3, [pc, #36]	; (8000764 <std+0x68>)
 800073e:	429c      	cmp	r4, r3
 8000740:	d103      	bne.n	800074a <std+0x4e>
 8000742:	0020      	movs	r0, r4
 8000744:	3058      	adds	r0, #88	; 0x58
 8000746:	f000 fa7f 	bl	8000c48 <__retarget_lock_init_recursive>
 800074a:	bd10      	pop	{r4, pc}
 800074c:	08000965 	.word	0x08000965
 8000750:	0800098d 	.word	0x0800098d
 8000754:	080009c5 	.word	0x080009c5
 8000758:	080009f1 	.word	0x080009f1
 800075c:	20000080 	.word	0x20000080
 8000760:	200000e8 	.word	0x200000e8
 8000764:	20000150 	.word	0x20000150

08000768 <stdio_exit_handler>:
 8000768:	b510      	push	{r4, lr}
 800076a:	4a03      	ldr	r2, [pc, #12]	; (8000778 <stdio_exit_handler+0x10>)
 800076c:	4903      	ldr	r1, [pc, #12]	; (800077c <stdio_exit_handler+0x14>)
 800076e:	4804      	ldr	r0, [pc, #16]	; (8000780 <stdio_exit_handler+0x18>)
 8000770:	f000 f86c 	bl	800084c <_fwalk_sglue>
 8000774:	bd10      	pop	{r4, pc}
 8000776:	46c0      	nop			; (mov r8, r8)
 8000778:	20000000 	.word	0x20000000
 800077c:	080014e9 	.word	0x080014e9
 8000780:	2000000c 	.word	0x2000000c

08000784 <cleanup_stdio>:
 8000784:	6841      	ldr	r1, [r0, #4]
 8000786:	4b0b      	ldr	r3, [pc, #44]	; (80007b4 <cleanup_stdio+0x30>)
 8000788:	b510      	push	{r4, lr}
 800078a:	0004      	movs	r4, r0
 800078c:	4299      	cmp	r1, r3
 800078e:	d001      	beq.n	8000794 <cleanup_stdio+0x10>
 8000790:	f000 feaa 	bl	80014e8 <_fflush_r>
 8000794:	68a1      	ldr	r1, [r4, #8]
 8000796:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <cleanup_stdio+0x34>)
 8000798:	4299      	cmp	r1, r3
 800079a:	d002      	beq.n	80007a2 <cleanup_stdio+0x1e>
 800079c:	0020      	movs	r0, r4
 800079e:	f000 fea3 	bl	80014e8 <_fflush_r>
 80007a2:	68e1      	ldr	r1, [r4, #12]
 80007a4:	4b05      	ldr	r3, [pc, #20]	; (80007bc <cleanup_stdio+0x38>)
 80007a6:	4299      	cmp	r1, r3
 80007a8:	d002      	beq.n	80007b0 <cleanup_stdio+0x2c>
 80007aa:	0020      	movs	r0, r4
 80007ac:	f000 fe9c 	bl	80014e8 <_fflush_r>
 80007b0:	bd10      	pop	{r4, pc}
 80007b2:	46c0      	nop			; (mov r8, r8)
 80007b4:	20000080 	.word	0x20000080
 80007b8:	200000e8 	.word	0x200000e8
 80007bc:	20000150 	.word	0x20000150

080007c0 <global_stdio_init.part.0>:
 80007c0:	b510      	push	{r4, lr}
 80007c2:	4b09      	ldr	r3, [pc, #36]	; (80007e8 <global_stdio_init.part.0+0x28>)
 80007c4:	4a09      	ldr	r2, [pc, #36]	; (80007ec <global_stdio_init.part.0+0x2c>)
 80007c6:	2104      	movs	r1, #4
 80007c8:	601a      	str	r2, [r3, #0]
 80007ca:	4809      	ldr	r0, [pc, #36]	; (80007f0 <global_stdio_init.part.0+0x30>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	f7ff ff95 	bl	80006fc <std>
 80007d2:	2201      	movs	r2, #1
 80007d4:	2109      	movs	r1, #9
 80007d6:	4807      	ldr	r0, [pc, #28]	; (80007f4 <global_stdio_init.part.0+0x34>)
 80007d8:	f7ff ff90 	bl	80006fc <std>
 80007dc:	2202      	movs	r2, #2
 80007de:	2112      	movs	r1, #18
 80007e0:	4805      	ldr	r0, [pc, #20]	; (80007f8 <global_stdio_init.part.0+0x38>)
 80007e2:	f7ff ff8b 	bl	80006fc <std>
 80007e6:	bd10      	pop	{r4, pc}
 80007e8:	200001b8 	.word	0x200001b8
 80007ec:	08000769 	.word	0x08000769
 80007f0:	20000080 	.word	0x20000080
 80007f4:	200000e8 	.word	0x200000e8
 80007f8:	20000150 	.word	0x20000150

080007fc <__sfp_lock_acquire>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	4802      	ldr	r0, [pc, #8]	; (8000808 <__sfp_lock_acquire+0xc>)
 8000800:	f000 fa23 	bl	8000c4a <__retarget_lock_acquire_recursive>
 8000804:	bd10      	pop	{r4, pc}
 8000806:	46c0      	nop			; (mov r8, r8)
 8000808:	200001c1 	.word	0x200001c1

0800080c <__sfp_lock_release>:
 800080c:	b510      	push	{r4, lr}
 800080e:	4802      	ldr	r0, [pc, #8]	; (8000818 <__sfp_lock_release+0xc>)
 8000810:	f000 fa1c 	bl	8000c4c <__retarget_lock_release_recursive>
 8000814:	bd10      	pop	{r4, pc}
 8000816:	46c0      	nop			; (mov r8, r8)
 8000818:	200001c1 	.word	0x200001c1

0800081c <__sinit>:
 800081c:	b510      	push	{r4, lr}
 800081e:	0004      	movs	r4, r0
 8000820:	f7ff ffec 	bl	80007fc <__sfp_lock_acquire>
 8000824:	6a23      	ldr	r3, [r4, #32]
 8000826:	2b00      	cmp	r3, #0
 8000828:	d002      	beq.n	8000830 <__sinit+0x14>
 800082a:	f7ff ffef 	bl	800080c <__sfp_lock_release>
 800082e:	bd10      	pop	{r4, pc}
 8000830:	4b04      	ldr	r3, [pc, #16]	; (8000844 <__sinit+0x28>)
 8000832:	6223      	str	r3, [r4, #32]
 8000834:	4b04      	ldr	r3, [pc, #16]	; (8000848 <__sinit+0x2c>)
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	2b00      	cmp	r3, #0
 800083a:	d1f6      	bne.n	800082a <__sinit+0xe>
 800083c:	f7ff ffc0 	bl	80007c0 <global_stdio_init.part.0>
 8000840:	e7f3      	b.n	800082a <__sinit+0xe>
 8000842:	46c0      	nop			; (mov r8, r8)
 8000844:	08000785 	.word	0x08000785
 8000848:	200001b8 	.word	0x200001b8

0800084c <_fwalk_sglue>:
 800084c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800084e:	0014      	movs	r4, r2
 8000850:	2600      	movs	r6, #0
 8000852:	9000      	str	r0, [sp, #0]
 8000854:	9101      	str	r1, [sp, #4]
 8000856:	68a5      	ldr	r5, [r4, #8]
 8000858:	6867      	ldr	r7, [r4, #4]
 800085a:	3f01      	subs	r7, #1
 800085c:	d504      	bpl.n	8000868 <_fwalk_sglue+0x1c>
 800085e:	6824      	ldr	r4, [r4, #0]
 8000860:	2c00      	cmp	r4, #0
 8000862:	d1f8      	bne.n	8000856 <_fwalk_sglue+0xa>
 8000864:	0030      	movs	r0, r6
 8000866:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000868:	89ab      	ldrh	r3, [r5, #12]
 800086a:	2b01      	cmp	r3, #1
 800086c:	d908      	bls.n	8000880 <_fwalk_sglue+0x34>
 800086e:	220e      	movs	r2, #14
 8000870:	5eab      	ldrsh	r3, [r5, r2]
 8000872:	3301      	adds	r3, #1
 8000874:	d004      	beq.n	8000880 <_fwalk_sglue+0x34>
 8000876:	0029      	movs	r1, r5
 8000878:	9800      	ldr	r0, [sp, #0]
 800087a:	9b01      	ldr	r3, [sp, #4]
 800087c:	4798      	blx	r3
 800087e:	4306      	orrs	r6, r0
 8000880:	3568      	adds	r5, #104	; 0x68
 8000882:	e7ea      	b.n	800085a <_fwalk_sglue+0xe>

08000884 <iprintf>:
 8000884:	b40f      	push	{r0, r1, r2, r3}
 8000886:	b507      	push	{r0, r1, r2, lr}
 8000888:	4905      	ldr	r1, [pc, #20]	; (80008a0 <iprintf+0x1c>)
 800088a:	ab04      	add	r3, sp, #16
 800088c:	6808      	ldr	r0, [r1, #0]
 800088e:	cb04      	ldmia	r3!, {r2}
 8000890:	6881      	ldr	r1, [r0, #8]
 8000892:	9301      	str	r3, [sp, #4]
 8000894:	f000 fb02 	bl	8000e9c <_vfiprintf_r>
 8000898:	b003      	add	sp, #12
 800089a:	bc08      	pop	{r3}
 800089c:	b004      	add	sp, #16
 800089e:	4718      	bx	r3
 80008a0:	20000058 	.word	0x20000058

080008a4 <_puts_r>:
 80008a4:	6a03      	ldr	r3, [r0, #32]
 80008a6:	b570      	push	{r4, r5, r6, lr}
 80008a8:	0005      	movs	r5, r0
 80008aa:	000e      	movs	r6, r1
 80008ac:	6884      	ldr	r4, [r0, #8]
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	d101      	bne.n	80008b6 <_puts_r+0x12>
 80008b2:	f7ff ffb3 	bl	800081c <__sinit>
 80008b6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008b8:	07db      	lsls	r3, r3, #31
 80008ba:	d405      	bmi.n	80008c8 <_puts_r+0x24>
 80008bc:	89a3      	ldrh	r3, [r4, #12]
 80008be:	059b      	lsls	r3, r3, #22
 80008c0:	d402      	bmi.n	80008c8 <_puts_r+0x24>
 80008c2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008c4:	f000 f9c1 	bl	8000c4a <__retarget_lock_acquire_recursive>
 80008c8:	89a3      	ldrh	r3, [r4, #12]
 80008ca:	071b      	lsls	r3, r3, #28
 80008cc:	d502      	bpl.n	80008d4 <_puts_r+0x30>
 80008ce:	6923      	ldr	r3, [r4, #16]
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d11f      	bne.n	8000914 <_puts_r+0x70>
 80008d4:	0021      	movs	r1, r4
 80008d6:	0028      	movs	r0, r5
 80008d8:	f000 f8d2 	bl	8000a80 <__swsetup_r>
 80008dc:	2800      	cmp	r0, #0
 80008de:	d019      	beq.n	8000914 <_puts_r+0x70>
 80008e0:	2501      	movs	r5, #1
 80008e2:	426d      	negs	r5, r5
 80008e4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008e6:	07db      	lsls	r3, r3, #31
 80008e8:	d405      	bmi.n	80008f6 <_puts_r+0x52>
 80008ea:	89a3      	ldrh	r3, [r4, #12]
 80008ec:	059b      	lsls	r3, r3, #22
 80008ee:	d402      	bmi.n	80008f6 <_puts_r+0x52>
 80008f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008f2:	f000 f9ab 	bl	8000c4c <__retarget_lock_release_recursive>
 80008f6:	0028      	movs	r0, r5
 80008f8:	bd70      	pop	{r4, r5, r6, pc}
 80008fa:	3601      	adds	r6, #1
 80008fc:	60a3      	str	r3, [r4, #8]
 80008fe:	2b00      	cmp	r3, #0
 8000900:	da04      	bge.n	800090c <_puts_r+0x68>
 8000902:	69a2      	ldr	r2, [r4, #24]
 8000904:	429a      	cmp	r2, r3
 8000906:	dc16      	bgt.n	8000936 <_puts_r+0x92>
 8000908:	290a      	cmp	r1, #10
 800090a:	d014      	beq.n	8000936 <_puts_r+0x92>
 800090c:	6823      	ldr	r3, [r4, #0]
 800090e:	1c5a      	adds	r2, r3, #1
 8000910:	6022      	str	r2, [r4, #0]
 8000912:	7019      	strb	r1, [r3, #0]
 8000914:	68a3      	ldr	r3, [r4, #8]
 8000916:	7831      	ldrb	r1, [r6, #0]
 8000918:	3b01      	subs	r3, #1
 800091a:	2900      	cmp	r1, #0
 800091c:	d1ed      	bne.n	80008fa <_puts_r+0x56>
 800091e:	60a3      	str	r3, [r4, #8]
 8000920:	2b00      	cmp	r3, #0
 8000922:	da0f      	bge.n	8000944 <_puts_r+0xa0>
 8000924:	0028      	movs	r0, r5
 8000926:	0022      	movs	r2, r4
 8000928:	310a      	adds	r1, #10
 800092a:	f000 f867 	bl	80009fc <__swbuf_r>
 800092e:	250a      	movs	r5, #10
 8000930:	3001      	adds	r0, #1
 8000932:	d1d7      	bne.n	80008e4 <_puts_r+0x40>
 8000934:	e7d4      	b.n	80008e0 <_puts_r+0x3c>
 8000936:	0022      	movs	r2, r4
 8000938:	0028      	movs	r0, r5
 800093a:	f000 f85f 	bl	80009fc <__swbuf_r>
 800093e:	3001      	adds	r0, #1
 8000940:	d1e8      	bne.n	8000914 <_puts_r+0x70>
 8000942:	e7cd      	b.n	80008e0 <_puts_r+0x3c>
 8000944:	250a      	movs	r5, #10
 8000946:	6823      	ldr	r3, [r4, #0]
 8000948:	1c5a      	adds	r2, r3, #1
 800094a:	6022      	str	r2, [r4, #0]
 800094c:	701d      	strb	r5, [r3, #0]
 800094e:	e7c9      	b.n	80008e4 <_puts_r+0x40>

08000950 <puts>:
 8000950:	b510      	push	{r4, lr}
 8000952:	4b03      	ldr	r3, [pc, #12]	; (8000960 <puts+0x10>)
 8000954:	0001      	movs	r1, r0
 8000956:	6818      	ldr	r0, [r3, #0]
 8000958:	f7ff ffa4 	bl	80008a4 <_puts_r>
 800095c:	bd10      	pop	{r4, pc}
 800095e:	46c0      	nop			; (mov r8, r8)
 8000960:	20000058 	.word	0x20000058

08000964 <__sread>:
 8000964:	b570      	push	{r4, r5, r6, lr}
 8000966:	000c      	movs	r4, r1
 8000968:	250e      	movs	r5, #14
 800096a:	5f49      	ldrsh	r1, [r1, r5]
 800096c:	f000 f91a 	bl	8000ba4 <_read_r>
 8000970:	2800      	cmp	r0, #0
 8000972:	db03      	blt.n	800097c <__sread+0x18>
 8000974:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000976:	181b      	adds	r3, r3, r0
 8000978:	6563      	str	r3, [r4, #84]	; 0x54
 800097a:	bd70      	pop	{r4, r5, r6, pc}
 800097c:	89a3      	ldrh	r3, [r4, #12]
 800097e:	4a02      	ldr	r2, [pc, #8]	; (8000988 <__sread+0x24>)
 8000980:	4013      	ands	r3, r2
 8000982:	81a3      	strh	r3, [r4, #12]
 8000984:	e7f9      	b.n	800097a <__sread+0x16>
 8000986:	46c0      	nop			; (mov r8, r8)
 8000988:	ffffefff 	.word	0xffffefff

0800098c <__swrite>:
 800098c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800098e:	001f      	movs	r7, r3
 8000990:	898b      	ldrh	r3, [r1, #12]
 8000992:	0005      	movs	r5, r0
 8000994:	000c      	movs	r4, r1
 8000996:	0016      	movs	r6, r2
 8000998:	05db      	lsls	r3, r3, #23
 800099a:	d505      	bpl.n	80009a8 <__swrite+0x1c>
 800099c:	230e      	movs	r3, #14
 800099e:	5ec9      	ldrsh	r1, [r1, r3]
 80009a0:	2200      	movs	r2, #0
 80009a2:	2302      	movs	r3, #2
 80009a4:	f000 f8ea 	bl	8000b7c <_lseek_r>
 80009a8:	89a3      	ldrh	r3, [r4, #12]
 80009aa:	4a05      	ldr	r2, [pc, #20]	; (80009c0 <__swrite+0x34>)
 80009ac:	0028      	movs	r0, r5
 80009ae:	4013      	ands	r3, r2
 80009b0:	81a3      	strh	r3, [r4, #12]
 80009b2:	0032      	movs	r2, r6
 80009b4:	230e      	movs	r3, #14
 80009b6:	5ee1      	ldrsh	r1, [r4, r3]
 80009b8:	003b      	movs	r3, r7
 80009ba:	f000 f907 	bl	8000bcc <_write_r>
 80009be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009c0:	ffffefff 	.word	0xffffefff

080009c4 <__sseek>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	000c      	movs	r4, r1
 80009c8:	250e      	movs	r5, #14
 80009ca:	5f49      	ldrsh	r1, [r1, r5]
 80009cc:	f000 f8d6 	bl	8000b7c <_lseek_r>
 80009d0:	89a3      	ldrh	r3, [r4, #12]
 80009d2:	1c42      	adds	r2, r0, #1
 80009d4:	d103      	bne.n	80009de <__sseek+0x1a>
 80009d6:	4a05      	ldr	r2, [pc, #20]	; (80009ec <__sseek+0x28>)
 80009d8:	4013      	ands	r3, r2
 80009da:	81a3      	strh	r3, [r4, #12]
 80009dc:	bd70      	pop	{r4, r5, r6, pc}
 80009de:	2280      	movs	r2, #128	; 0x80
 80009e0:	0152      	lsls	r2, r2, #5
 80009e2:	4313      	orrs	r3, r2
 80009e4:	81a3      	strh	r3, [r4, #12]
 80009e6:	6560      	str	r0, [r4, #84]	; 0x54
 80009e8:	e7f8      	b.n	80009dc <__sseek+0x18>
 80009ea:	46c0      	nop			; (mov r8, r8)
 80009ec:	ffffefff 	.word	0xffffefff

080009f0 <__sclose>:
 80009f0:	b510      	push	{r4, lr}
 80009f2:	230e      	movs	r3, #14
 80009f4:	5ec9      	ldrsh	r1, [r1, r3]
 80009f6:	f000 f8af 	bl	8000b58 <_close_r>
 80009fa:	bd10      	pop	{r4, pc}

080009fc <__swbuf_r>:
 80009fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009fe:	0006      	movs	r6, r0
 8000a00:	000d      	movs	r5, r1
 8000a02:	0014      	movs	r4, r2
 8000a04:	2800      	cmp	r0, #0
 8000a06:	d004      	beq.n	8000a12 <__swbuf_r+0x16>
 8000a08:	6a03      	ldr	r3, [r0, #32]
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d101      	bne.n	8000a12 <__swbuf_r+0x16>
 8000a0e:	f7ff ff05 	bl	800081c <__sinit>
 8000a12:	69a3      	ldr	r3, [r4, #24]
 8000a14:	60a3      	str	r3, [r4, #8]
 8000a16:	89a3      	ldrh	r3, [r4, #12]
 8000a18:	071b      	lsls	r3, r3, #28
 8000a1a:	d528      	bpl.n	8000a6e <__swbuf_r+0x72>
 8000a1c:	6923      	ldr	r3, [r4, #16]
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	d025      	beq.n	8000a6e <__swbuf_r+0x72>
 8000a22:	6923      	ldr	r3, [r4, #16]
 8000a24:	6820      	ldr	r0, [r4, #0]
 8000a26:	b2ef      	uxtb	r7, r5
 8000a28:	1ac0      	subs	r0, r0, r3
 8000a2a:	6963      	ldr	r3, [r4, #20]
 8000a2c:	b2ed      	uxtb	r5, r5
 8000a2e:	4283      	cmp	r3, r0
 8000a30:	dc05      	bgt.n	8000a3e <__swbuf_r+0x42>
 8000a32:	0021      	movs	r1, r4
 8000a34:	0030      	movs	r0, r6
 8000a36:	f000 fd57 	bl	80014e8 <_fflush_r>
 8000a3a:	2800      	cmp	r0, #0
 8000a3c:	d11d      	bne.n	8000a7a <__swbuf_r+0x7e>
 8000a3e:	68a3      	ldr	r3, [r4, #8]
 8000a40:	3001      	adds	r0, #1
 8000a42:	3b01      	subs	r3, #1
 8000a44:	60a3      	str	r3, [r4, #8]
 8000a46:	6823      	ldr	r3, [r4, #0]
 8000a48:	1c5a      	adds	r2, r3, #1
 8000a4a:	6022      	str	r2, [r4, #0]
 8000a4c:	701f      	strb	r7, [r3, #0]
 8000a4e:	6963      	ldr	r3, [r4, #20]
 8000a50:	4283      	cmp	r3, r0
 8000a52:	d004      	beq.n	8000a5e <__swbuf_r+0x62>
 8000a54:	89a3      	ldrh	r3, [r4, #12]
 8000a56:	07db      	lsls	r3, r3, #31
 8000a58:	d507      	bpl.n	8000a6a <__swbuf_r+0x6e>
 8000a5a:	2d0a      	cmp	r5, #10
 8000a5c:	d105      	bne.n	8000a6a <__swbuf_r+0x6e>
 8000a5e:	0021      	movs	r1, r4
 8000a60:	0030      	movs	r0, r6
 8000a62:	f000 fd41 	bl	80014e8 <_fflush_r>
 8000a66:	2800      	cmp	r0, #0
 8000a68:	d107      	bne.n	8000a7a <__swbuf_r+0x7e>
 8000a6a:	0028      	movs	r0, r5
 8000a6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a6e:	0021      	movs	r1, r4
 8000a70:	0030      	movs	r0, r6
 8000a72:	f000 f805 	bl	8000a80 <__swsetup_r>
 8000a76:	2800      	cmp	r0, #0
 8000a78:	d0d3      	beq.n	8000a22 <__swbuf_r+0x26>
 8000a7a:	2501      	movs	r5, #1
 8000a7c:	426d      	negs	r5, r5
 8000a7e:	e7f4      	b.n	8000a6a <__swbuf_r+0x6e>

08000a80 <__swsetup_r>:
 8000a80:	4b30      	ldr	r3, [pc, #192]	; (8000b44 <__swsetup_r+0xc4>)
 8000a82:	b570      	push	{r4, r5, r6, lr}
 8000a84:	0005      	movs	r5, r0
 8000a86:	6818      	ldr	r0, [r3, #0]
 8000a88:	000c      	movs	r4, r1
 8000a8a:	2800      	cmp	r0, #0
 8000a8c:	d004      	beq.n	8000a98 <__swsetup_r+0x18>
 8000a8e:	6a03      	ldr	r3, [r0, #32]
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	d101      	bne.n	8000a98 <__swsetup_r+0x18>
 8000a94:	f7ff fec2 	bl	800081c <__sinit>
 8000a98:	230c      	movs	r3, #12
 8000a9a:	5ee2      	ldrsh	r2, [r4, r3]
 8000a9c:	b293      	uxth	r3, r2
 8000a9e:	0711      	lsls	r1, r2, #28
 8000aa0:	d423      	bmi.n	8000aea <__swsetup_r+0x6a>
 8000aa2:	06d9      	lsls	r1, r3, #27
 8000aa4:	d407      	bmi.n	8000ab6 <__swsetup_r+0x36>
 8000aa6:	2309      	movs	r3, #9
 8000aa8:	2001      	movs	r0, #1
 8000aaa:	602b      	str	r3, [r5, #0]
 8000aac:	3337      	adds	r3, #55	; 0x37
 8000aae:	4313      	orrs	r3, r2
 8000ab0:	81a3      	strh	r3, [r4, #12]
 8000ab2:	4240      	negs	r0, r0
 8000ab4:	bd70      	pop	{r4, r5, r6, pc}
 8000ab6:	075b      	lsls	r3, r3, #29
 8000ab8:	d513      	bpl.n	8000ae2 <__swsetup_r+0x62>
 8000aba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000abc:	2900      	cmp	r1, #0
 8000abe:	d008      	beq.n	8000ad2 <__swsetup_r+0x52>
 8000ac0:	0023      	movs	r3, r4
 8000ac2:	3344      	adds	r3, #68	; 0x44
 8000ac4:	4299      	cmp	r1, r3
 8000ac6:	d002      	beq.n	8000ace <__swsetup_r+0x4e>
 8000ac8:	0028      	movs	r0, r5
 8000aca:	f000 f8c1 	bl	8000c50 <_free_r>
 8000ace:	2300      	movs	r3, #0
 8000ad0:	6363      	str	r3, [r4, #52]	; 0x34
 8000ad2:	2224      	movs	r2, #36	; 0x24
 8000ad4:	89a3      	ldrh	r3, [r4, #12]
 8000ad6:	4393      	bics	r3, r2
 8000ad8:	81a3      	strh	r3, [r4, #12]
 8000ada:	2300      	movs	r3, #0
 8000adc:	6063      	str	r3, [r4, #4]
 8000ade:	6923      	ldr	r3, [r4, #16]
 8000ae0:	6023      	str	r3, [r4, #0]
 8000ae2:	2308      	movs	r3, #8
 8000ae4:	89a2      	ldrh	r2, [r4, #12]
 8000ae6:	4313      	orrs	r3, r2
 8000ae8:	81a3      	strh	r3, [r4, #12]
 8000aea:	6923      	ldr	r3, [r4, #16]
 8000aec:	2b00      	cmp	r3, #0
 8000aee:	d10b      	bne.n	8000b08 <__swsetup_r+0x88>
 8000af0:	21a0      	movs	r1, #160	; 0xa0
 8000af2:	2280      	movs	r2, #128	; 0x80
 8000af4:	89a3      	ldrh	r3, [r4, #12]
 8000af6:	0089      	lsls	r1, r1, #2
 8000af8:	0092      	lsls	r2, r2, #2
 8000afa:	400b      	ands	r3, r1
 8000afc:	4293      	cmp	r3, r2
 8000afe:	d003      	beq.n	8000b08 <__swsetup_r+0x88>
 8000b00:	0021      	movs	r1, r4
 8000b02:	0028      	movs	r0, r5
 8000b04:	f000 fd44 	bl	8001590 <__smakebuf_r>
 8000b08:	220c      	movs	r2, #12
 8000b0a:	5ea3      	ldrsh	r3, [r4, r2]
 8000b0c:	2001      	movs	r0, #1
 8000b0e:	001a      	movs	r2, r3
 8000b10:	b299      	uxth	r1, r3
 8000b12:	4002      	ands	r2, r0
 8000b14:	4203      	tst	r3, r0
 8000b16:	d00f      	beq.n	8000b38 <__swsetup_r+0xb8>
 8000b18:	2200      	movs	r2, #0
 8000b1a:	60a2      	str	r2, [r4, #8]
 8000b1c:	6962      	ldr	r2, [r4, #20]
 8000b1e:	4252      	negs	r2, r2
 8000b20:	61a2      	str	r2, [r4, #24]
 8000b22:	2000      	movs	r0, #0
 8000b24:	6922      	ldr	r2, [r4, #16]
 8000b26:	4282      	cmp	r2, r0
 8000b28:	d1c4      	bne.n	8000ab4 <__swsetup_r+0x34>
 8000b2a:	0609      	lsls	r1, r1, #24
 8000b2c:	d5c2      	bpl.n	8000ab4 <__swsetup_r+0x34>
 8000b2e:	2240      	movs	r2, #64	; 0x40
 8000b30:	4313      	orrs	r3, r2
 8000b32:	81a3      	strh	r3, [r4, #12]
 8000b34:	3801      	subs	r0, #1
 8000b36:	e7bd      	b.n	8000ab4 <__swsetup_r+0x34>
 8000b38:	0788      	lsls	r0, r1, #30
 8000b3a:	d400      	bmi.n	8000b3e <__swsetup_r+0xbe>
 8000b3c:	6962      	ldr	r2, [r4, #20]
 8000b3e:	60a2      	str	r2, [r4, #8]
 8000b40:	e7ef      	b.n	8000b22 <__swsetup_r+0xa2>
 8000b42:	46c0      	nop			; (mov r8, r8)
 8000b44:	20000058 	.word	0x20000058

08000b48 <memset>:
 8000b48:	0003      	movs	r3, r0
 8000b4a:	1882      	adds	r2, r0, r2
 8000b4c:	4293      	cmp	r3, r2
 8000b4e:	d100      	bne.n	8000b52 <memset+0xa>
 8000b50:	4770      	bx	lr
 8000b52:	7019      	strb	r1, [r3, #0]
 8000b54:	3301      	adds	r3, #1
 8000b56:	e7f9      	b.n	8000b4c <memset+0x4>

08000b58 <_close_r>:
 8000b58:	2300      	movs	r3, #0
 8000b5a:	b570      	push	{r4, r5, r6, lr}
 8000b5c:	4d06      	ldr	r5, [pc, #24]	; (8000b78 <_close_r+0x20>)
 8000b5e:	0004      	movs	r4, r0
 8000b60:	0008      	movs	r0, r1
 8000b62:	602b      	str	r3, [r5, #0]
 8000b64:	f7ff fc69 	bl	800043a <_close>
 8000b68:	1c43      	adds	r3, r0, #1
 8000b6a:	d103      	bne.n	8000b74 <_close_r+0x1c>
 8000b6c:	682b      	ldr	r3, [r5, #0]
 8000b6e:	2b00      	cmp	r3, #0
 8000b70:	d000      	beq.n	8000b74 <_close_r+0x1c>
 8000b72:	6023      	str	r3, [r4, #0]
 8000b74:	bd70      	pop	{r4, r5, r6, pc}
 8000b76:	46c0      	nop			; (mov r8, r8)
 8000b78:	200001bc 	.word	0x200001bc

08000b7c <_lseek_r>:
 8000b7c:	b570      	push	{r4, r5, r6, lr}
 8000b7e:	0004      	movs	r4, r0
 8000b80:	0008      	movs	r0, r1
 8000b82:	0011      	movs	r1, r2
 8000b84:	001a      	movs	r2, r3
 8000b86:	2300      	movs	r3, #0
 8000b88:	4d05      	ldr	r5, [pc, #20]	; (8000ba0 <_lseek_r+0x24>)
 8000b8a:	602b      	str	r3, [r5, #0]
 8000b8c:	f7ff fc76 	bl	800047c <_lseek>
 8000b90:	1c43      	adds	r3, r0, #1
 8000b92:	d103      	bne.n	8000b9c <_lseek_r+0x20>
 8000b94:	682b      	ldr	r3, [r5, #0]
 8000b96:	2b00      	cmp	r3, #0
 8000b98:	d000      	beq.n	8000b9c <_lseek_r+0x20>
 8000b9a:	6023      	str	r3, [r4, #0]
 8000b9c:	bd70      	pop	{r4, r5, r6, pc}
 8000b9e:	46c0      	nop			; (mov r8, r8)
 8000ba0:	200001bc 	.word	0x200001bc

08000ba4 <_read_r>:
 8000ba4:	b570      	push	{r4, r5, r6, lr}
 8000ba6:	0004      	movs	r4, r0
 8000ba8:	0008      	movs	r0, r1
 8000baa:	0011      	movs	r1, r2
 8000bac:	001a      	movs	r2, r3
 8000bae:	2300      	movs	r3, #0
 8000bb0:	4d05      	ldr	r5, [pc, #20]	; (8000bc8 <_read_r+0x24>)
 8000bb2:	602b      	str	r3, [r5, #0]
 8000bb4:	f7ff fc08 	bl	80003c8 <_read>
 8000bb8:	1c43      	adds	r3, r0, #1
 8000bba:	d103      	bne.n	8000bc4 <_read_r+0x20>
 8000bbc:	682b      	ldr	r3, [r5, #0]
 8000bbe:	2b00      	cmp	r3, #0
 8000bc0:	d000      	beq.n	8000bc4 <_read_r+0x20>
 8000bc2:	6023      	str	r3, [r4, #0]
 8000bc4:	bd70      	pop	{r4, r5, r6, pc}
 8000bc6:	46c0      	nop			; (mov r8, r8)
 8000bc8:	200001bc 	.word	0x200001bc

08000bcc <_write_r>:
 8000bcc:	b570      	push	{r4, r5, r6, lr}
 8000bce:	0004      	movs	r4, r0
 8000bd0:	0008      	movs	r0, r1
 8000bd2:	0011      	movs	r1, r2
 8000bd4:	001a      	movs	r2, r3
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	4d05      	ldr	r5, [pc, #20]	; (8000bf0 <_write_r+0x24>)
 8000bda:	602b      	str	r3, [r5, #0]
 8000bdc:	f7ff fc11 	bl	8000402 <_write>
 8000be0:	1c43      	adds	r3, r0, #1
 8000be2:	d103      	bne.n	8000bec <_write_r+0x20>
 8000be4:	682b      	ldr	r3, [r5, #0]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d000      	beq.n	8000bec <_write_r+0x20>
 8000bea:	6023      	str	r3, [r4, #0]
 8000bec:	bd70      	pop	{r4, r5, r6, pc}
 8000bee:	46c0      	nop			; (mov r8, r8)
 8000bf0:	200001bc 	.word	0x200001bc

08000bf4 <__errno>:
 8000bf4:	4b01      	ldr	r3, [pc, #4]	; (8000bfc <__errno+0x8>)
 8000bf6:	6818      	ldr	r0, [r3, #0]
 8000bf8:	4770      	bx	lr
 8000bfa:	46c0      	nop			; (mov r8, r8)
 8000bfc:	20000058 	.word	0x20000058

08000c00 <__libc_init_array>:
 8000c00:	b570      	push	{r4, r5, r6, lr}
 8000c02:	2600      	movs	r6, #0
 8000c04:	4c0c      	ldr	r4, [pc, #48]	; (8000c38 <__libc_init_array+0x38>)
 8000c06:	4d0d      	ldr	r5, [pc, #52]	; (8000c3c <__libc_init_array+0x3c>)
 8000c08:	1b64      	subs	r4, r4, r5
 8000c0a:	10a4      	asrs	r4, r4, #2
 8000c0c:	42a6      	cmp	r6, r4
 8000c0e:	d109      	bne.n	8000c24 <__libc_init_array+0x24>
 8000c10:	2600      	movs	r6, #0
 8000c12:	f000 fd3d 	bl	8001690 <_init>
 8000c16:	4c0a      	ldr	r4, [pc, #40]	; (8000c40 <__libc_init_array+0x40>)
 8000c18:	4d0a      	ldr	r5, [pc, #40]	; (8000c44 <__libc_init_array+0x44>)
 8000c1a:	1b64      	subs	r4, r4, r5
 8000c1c:	10a4      	asrs	r4, r4, #2
 8000c1e:	42a6      	cmp	r6, r4
 8000c20:	d105      	bne.n	8000c2e <__libc_init_array+0x2e>
 8000c22:	bd70      	pop	{r4, r5, r6, pc}
 8000c24:	00b3      	lsls	r3, r6, #2
 8000c26:	58eb      	ldr	r3, [r5, r3]
 8000c28:	4798      	blx	r3
 8000c2a:	3601      	adds	r6, #1
 8000c2c:	e7ee      	b.n	8000c0c <__libc_init_array+0xc>
 8000c2e:	00b3      	lsls	r3, r6, #2
 8000c30:	58eb      	ldr	r3, [r5, r3]
 8000c32:	4798      	blx	r3
 8000c34:	3601      	adds	r6, #1
 8000c36:	e7f2      	b.n	8000c1e <__libc_init_array+0x1e>
 8000c38:	08001700 	.word	0x08001700
 8000c3c:	08001700 	.word	0x08001700
 8000c40:	08001704 	.word	0x08001704
 8000c44:	08001700 	.word	0x08001700

08000c48 <__retarget_lock_init_recursive>:
 8000c48:	4770      	bx	lr

08000c4a <__retarget_lock_acquire_recursive>:
 8000c4a:	4770      	bx	lr

08000c4c <__retarget_lock_release_recursive>:
 8000c4c:	4770      	bx	lr
	...

08000c50 <_free_r>:
 8000c50:	b570      	push	{r4, r5, r6, lr}
 8000c52:	0005      	movs	r5, r0
 8000c54:	2900      	cmp	r1, #0
 8000c56:	d010      	beq.n	8000c7a <_free_r+0x2a>
 8000c58:	1f0c      	subs	r4, r1, #4
 8000c5a:	6823      	ldr	r3, [r4, #0]
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	da00      	bge.n	8000c62 <_free_r+0x12>
 8000c60:	18e4      	adds	r4, r4, r3
 8000c62:	0028      	movs	r0, r5
 8000c64:	f000 f8e2 	bl	8000e2c <__malloc_lock>
 8000c68:	4a1d      	ldr	r2, [pc, #116]	; (8000ce0 <_free_r+0x90>)
 8000c6a:	6813      	ldr	r3, [r2, #0]
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	d105      	bne.n	8000c7c <_free_r+0x2c>
 8000c70:	6063      	str	r3, [r4, #4]
 8000c72:	6014      	str	r4, [r2, #0]
 8000c74:	0028      	movs	r0, r5
 8000c76:	f000 f8e1 	bl	8000e3c <__malloc_unlock>
 8000c7a:	bd70      	pop	{r4, r5, r6, pc}
 8000c7c:	42a3      	cmp	r3, r4
 8000c7e:	d908      	bls.n	8000c92 <_free_r+0x42>
 8000c80:	6820      	ldr	r0, [r4, #0]
 8000c82:	1821      	adds	r1, r4, r0
 8000c84:	428b      	cmp	r3, r1
 8000c86:	d1f3      	bne.n	8000c70 <_free_r+0x20>
 8000c88:	6819      	ldr	r1, [r3, #0]
 8000c8a:	685b      	ldr	r3, [r3, #4]
 8000c8c:	1809      	adds	r1, r1, r0
 8000c8e:	6021      	str	r1, [r4, #0]
 8000c90:	e7ee      	b.n	8000c70 <_free_r+0x20>
 8000c92:	001a      	movs	r2, r3
 8000c94:	685b      	ldr	r3, [r3, #4]
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	d001      	beq.n	8000c9e <_free_r+0x4e>
 8000c9a:	42a3      	cmp	r3, r4
 8000c9c:	d9f9      	bls.n	8000c92 <_free_r+0x42>
 8000c9e:	6811      	ldr	r1, [r2, #0]
 8000ca0:	1850      	adds	r0, r2, r1
 8000ca2:	42a0      	cmp	r0, r4
 8000ca4:	d10b      	bne.n	8000cbe <_free_r+0x6e>
 8000ca6:	6820      	ldr	r0, [r4, #0]
 8000ca8:	1809      	adds	r1, r1, r0
 8000caa:	1850      	adds	r0, r2, r1
 8000cac:	6011      	str	r1, [r2, #0]
 8000cae:	4283      	cmp	r3, r0
 8000cb0:	d1e0      	bne.n	8000c74 <_free_r+0x24>
 8000cb2:	6818      	ldr	r0, [r3, #0]
 8000cb4:	685b      	ldr	r3, [r3, #4]
 8000cb6:	1841      	adds	r1, r0, r1
 8000cb8:	6011      	str	r1, [r2, #0]
 8000cba:	6053      	str	r3, [r2, #4]
 8000cbc:	e7da      	b.n	8000c74 <_free_r+0x24>
 8000cbe:	42a0      	cmp	r0, r4
 8000cc0:	d902      	bls.n	8000cc8 <_free_r+0x78>
 8000cc2:	230c      	movs	r3, #12
 8000cc4:	602b      	str	r3, [r5, #0]
 8000cc6:	e7d5      	b.n	8000c74 <_free_r+0x24>
 8000cc8:	6820      	ldr	r0, [r4, #0]
 8000cca:	1821      	adds	r1, r4, r0
 8000ccc:	428b      	cmp	r3, r1
 8000cce:	d103      	bne.n	8000cd8 <_free_r+0x88>
 8000cd0:	6819      	ldr	r1, [r3, #0]
 8000cd2:	685b      	ldr	r3, [r3, #4]
 8000cd4:	1809      	adds	r1, r1, r0
 8000cd6:	6021      	str	r1, [r4, #0]
 8000cd8:	6063      	str	r3, [r4, #4]
 8000cda:	6054      	str	r4, [r2, #4]
 8000cdc:	e7ca      	b.n	8000c74 <_free_r+0x24>
 8000cde:	46c0      	nop			; (mov r8, r8)
 8000ce0:	200001c4 	.word	0x200001c4

08000ce4 <sbrk_aligned>:
 8000ce4:	b570      	push	{r4, r5, r6, lr}
 8000ce6:	4e0f      	ldr	r6, [pc, #60]	; (8000d24 <sbrk_aligned+0x40>)
 8000ce8:	000d      	movs	r5, r1
 8000cea:	6831      	ldr	r1, [r6, #0]
 8000cec:	0004      	movs	r4, r0
 8000cee:	2900      	cmp	r1, #0
 8000cf0:	d102      	bne.n	8000cf8 <sbrk_aligned+0x14>
 8000cf2:	f000 fcaf 	bl	8001654 <_sbrk_r>
 8000cf6:	6030      	str	r0, [r6, #0]
 8000cf8:	0029      	movs	r1, r5
 8000cfa:	0020      	movs	r0, r4
 8000cfc:	f000 fcaa 	bl	8001654 <_sbrk_r>
 8000d00:	1c43      	adds	r3, r0, #1
 8000d02:	d00a      	beq.n	8000d1a <sbrk_aligned+0x36>
 8000d04:	2303      	movs	r3, #3
 8000d06:	1cc5      	adds	r5, r0, #3
 8000d08:	439d      	bics	r5, r3
 8000d0a:	42a8      	cmp	r0, r5
 8000d0c:	d007      	beq.n	8000d1e <sbrk_aligned+0x3a>
 8000d0e:	1a29      	subs	r1, r5, r0
 8000d10:	0020      	movs	r0, r4
 8000d12:	f000 fc9f 	bl	8001654 <_sbrk_r>
 8000d16:	3001      	adds	r0, #1
 8000d18:	d101      	bne.n	8000d1e <sbrk_aligned+0x3a>
 8000d1a:	2501      	movs	r5, #1
 8000d1c:	426d      	negs	r5, r5
 8000d1e:	0028      	movs	r0, r5
 8000d20:	bd70      	pop	{r4, r5, r6, pc}
 8000d22:	46c0      	nop			; (mov r8, r8)
 8000d24:	200001c8 	.word	0x200001c8

08000d28 <_malloc_r>:
 8000d28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d2a:	2203      	movs	r2, #3
 8000d2c:	1ccb      	adds	r3, r1, #3
 8000d2e:	4393      	bics	r3, r2
 8000d30:	3308      	adds	r3, #8
 8000d32:	0006      	movs	r6, r0
 8000d34:	001f      	movs	r7, r3
 8000d36:	2b0c      	cmp	r3, #12
 8000d38:	d238      	bcs.n	8000dac <_malloc_r+0x84>
 8000d3a:	270c      	movs	r7, #12
 8000d3c:	42b9      	cmp	r1, r7
 8000d3e:	d837      	bhi.n	8000db0 <_malloc_r+0x88>
 8000d40:	0030      	movs	r0, r6
 8000d42:	f000 f873 	bl	8000e2c <__malloc_lock>
 8000d46:	4b38      	ldr	r3, [pc, #224]	; (8000e28 <_malloc_r+0x100>)
 8000d48:	9300      	str	r3, [sp, #0]
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	001c      	movs	r4, r3
 8000d4e:	2c00      	cmp	r4, #0
 8000d50:	d133      	bne.n	8000dba <_malloc_r+0x92>
 8000d52:	0039      	movs	r1, r7
 8000d54:	0030      	movs	r0, r6
 8000d56:	f7ff ffc5 	bl	8000ce4 <sbrk_aligned>
 8000d5a:	0004      	movs	r4, r0
 8000d5c:	1c43      	adds	r3, r0, #1
 8000d5e:	d15e      	bne.n	8000e1e <_malloc_r+0xf6>
 8000d60:	9b00      	ldr	r3, [sp, #0]
 8000d62:	681c      	ldr	r4, [r3, #0]
 8000d64:	0025      	movs	r5, r4
 8000d66:	2d00      	cmp	r5, #0
 8000d68:	d14e      	bne.n	8000e08 <_malloc_r+0xe0>
 8000d6a:	2c00      	cmp	r4, #0
 8000d6c:	d051      	beq.n	8000e12 <_malloc_r+0xea>
 8000d6e:	6823      	ldr	r3, [r4, #0]
 8000d70:	0029      	movs	r1, r5
 8000d72:	18e3      	adds	r3, r4, r3
 8000d74:	0030      	movs	r0, r6
 8000d76:	9301      	str	r3, [sp, #4]
 8000d78:	f000 fc6c 	bl	8001654 <_sbrk_r>
 8000d7c:	9b01      	ldr	r3, [sp, #4]
 8000d7e:	4283      	cmp	r3, r0
 8000d80:	d147      	bne.n	8000e12 <_malloc_r+0xea>
 8000d82:	6823      	ldr	r3, [r4, #0]
 8000d84:	0030      	movs	r0, r6
 8000d86:	1aff      	subs	r7, r7, r3
 8000d88:	0039      	movs	r1, r7
 8000d8a:	f7ff ffab 	bl	8000ce4 <sbrk_aligned>
 8000d8e:	3001      	adds	r0, #1
 8000d90:	d03f      	beq.n	8000e12 <_malloc_r+0xea>
 8000d92:	6823      	ldr	r3, [r4, #0]
 8000d94:	19db      	adds	r3, r3, r7
 8000d96:	6023      	str	r3, [r4, #0]
 8000d98:	9b00      	ldr	r3, [sp, #0]
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	2b00      	cmp	r3, #0
 8000d9e:	d040      	beq.n	8000e22 <_malloc_r+0xfa>
 8000da0:	685a      	ldr	r2, [r3, #4]
 8000da2:	42a2      	cmp	r2, r4
 8000da4:	d133      	bne.n	8000e0e <_malloc_r+0xe6>
 8000da6:	2200      	movs	r2, #0
 8000da8:	605a      	str	r2, [r3, #4]
 8000daa:	e014      	b.n	8000dd6 <_malloc_r+0xae>
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	dac5      	bge.n	8000d3c <_malloc_r+0x14>
 8000db0:	230c      	movs	r3, #12
 8000db2:	2500      	movs	r5, #0
 8000db4:	6033      	str	r3, [r6, #0]
 8000db6:	0028      	movs	r0, r5
 8000db8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000dba:	6821      	ldr	r1, [r4, #0]
 8000dbc:	1bc9      	subs	r1, r1, r7
 8000dbe:	d420      	bmi.n	8000e02 <_malloc_r+0xda>
 8000dc0:	290b      	cmp	r1, #11
 8000dc2:	d918      	bls.n	8000df6 <_malloc_r+0xce>
 8000dc4:	19e2      	adds	r2, r4, r7
 8000dc6:	6027      	str	r7, [r4, #0]
 8000dc8:	42a3      	cmp	r3, r4
 8000dca:	d112      	bne.n	8000df2 <_malloc_r+0xca>
 8000dcc:	9b00      	ldr	r3, [sp, #0]
 8000dce:	601a      	str	r2, [r3, #0]
 8000dd0:	6863      	ldr	r3, [r4, #4]
 8000dd2:	6011      	str	r1, [r2, #0]
 8000dd4:	6053      	str	r3, [r2, #4]
 8000dd6:	0030      	movs	r0, r6
 8000dd8:	0025      	movs	r5, r4
 8000dda:	f000 f82f 	bl	8000e3c <__malloc_unlock>
 8000dde:	2207      	movs	r2, #7
 8000de0:	350b      	adds	r5, #11
 8000de2:	1d23      	adds	r3, r4, #4
 8000de4:	4395      	bics	r5, r2
 8000de6:	1aea      	subs	r2, r5, r3
 8000de8:	429d      	cmp	r5, r3
 8000dea:	d0e4      	beq.n	8000db6 <_malloc_r+0x8e>
 8000dec:	1b5b      	subs	r3, r3, r5
 8000dee:	50a3      	str	r3, [r4, r2]
 8000df0:	e7e1      	b.n	8000db6 <_malloc_r+0x8e>
 8000df2:	605a      	str	r2, [r3, #4]
 8000df4:	e7ec      	b.n	8000dd0 <_malloc_r+0xa8>
 8000df6:	6862      	ldr	r2, [r4, #4]
 8000df8:	42a3      	cmp	r3, r4
 8000dfa:	d1d5      	bne.n	8000da8 <_malloc_r+0x80>
 8000dfc:	9b00      	ldr	r3, [sp, #0]
 8000dfe:	601a      	str	r2, [r3, #0]
 8000e00:	e7e9      	b.n	8000dd6 <_malloc_r+0xae>
 8000e02:	0023      	movs	r3, r4
 8000e04:	6864      	ldr	r4, [r4, #4]
 8000e06:	e7a2      	b.n	8000d4e <_malloc_r+0x26>
 8000e08:	002c      	movs	r4, r5
 8000e0a:	686d      	ldr	r5, [r5, #4]
 8000e0c:	e7ab      	b.n	8000d66 <_malloc_r+0x3e>
 8000e0e:	0013      	movs	r3, r2
 8000e10:	e7c4      	b.n	8000d9c <_malloc_r+0x74>
 8000e12:	230c      	movs	r3, #12
 8000e14:	0030      	movs	r0, r6
 8000e16:	6033      	str	r3, [r6, #0]
 8000e18:	f000 f810 	bl	8000e3c <__malloc_unlock>
 8000e1c:	e7cb      	b.n	8000db6 <_malloc_r+0x8e>
 8000e1e:	6027      	str	r7, [r4, #0]
 8000e20:	e7d9      	b.n	8000dd6 <_malloc_r+0xae>
 8000e22:	605b      	str	r3, [r3, #4]
 8000e24:	deff      	udf	#255	; 0xff
 8000e26:	46c0      	nop			; (mov r8, r8)
 8000e28:	200001c4 	.word	0x200001c4

08000e2c <__malloc_lock>:
 8000e2c:	b510      	push	{r4, lr}
 8000e2e:	4802      	ldr	r0, [pc, #8]	; (8000e38 <__malloc_lock+0xc>)
 8000e30:	f7ff ff0b 	bl	8000c4a <__retarget_lock_acquire_recursive>
 8000e34:	bd10      	pop	{r4, pc}
 8000e36:	46c0      	nop			; (mov r8, r8)
 8000e38:	200001c0 	.word	0x200001c0

08000e3c <__malloc_unlock>:
 8000e3c:	b510      	push	{r4, lr}
 8000e3e:	4802      	ldr	r0, [pc, #8]	; (8000e48 <__malloc_unlock+0xc>)
 8000e40:	f7ff ff04 	bl	8000c4c <__retarget_lock_release_recursive>
 8000e44:	bd10      	pop	{r4, pc}
 8000e46:	46c0      	nop			; (mov r8, r8)
 8000e48:	200001c0 	.word	0x200001c0

08000e4c <__sfputc_r>:
 8000e4c:	6893      	ldr	r3, [r2, #8]
 8000e4e:	b510      	push	{r4, lr}
 8000e50:	3b01      	subs	r3, #1
 8000e52:	6093      	str	r3, [r2, #8]
 8000e54:	2b00      	cmp	r3, #0
 8000e56:	da04      	bge.n	8000e62 <__sfputc_r+0x16>
 8000e58:	6994      	ldr	r4, [r2, #24]
 8000e5a:	42a3      	cmp	r3, r4
 8000e5c:	db07      	blt.n	8000e6e <__sfputc_r+0x22>
 8000e5e:	290a      	cmp	r1, #10
 8000e60:	d005      	beq.n	8000e6e <__sfputc_r+0x22>
 8000e62:	6813      	ldr	r3, [r2, #0]
 8000e64:	1c58      	adds	r0, r3, #1
 8000e66:	6010      	str	r0, [r2, #0]
 8000e68:	7019      	strb	r1, [r3, #0]
 8000e6a:	0008      	movs	r0, r1
 8000e6c:	bd10      	pop	{r4, pc}
 8000e6e:	f7ff fdc5 	bl	80009fc <__swbuf_r>
 8000e72:	0001      	movs	r1, r0
 8000e74:	e7f9      	b.n	8000e6a <__sfputc_r+0x1e>

08000e76 <__sfputs_r>:
 8000e76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e78:	0006      	movs	r6, r0
 8000e7a:	000f      	movs	r7, r1
 8000e7c:	0014      	movs	r4, r2
 8000e7e:	18d5      	adds	r5, r2, r3
 8000e80:	42ac      	cmp	r4, r5
 8000e82:	d101      	bne.n	8000e88 <__sfputs_r+0x12>
 8000e84:	2000      	movs	r0, #0
 8000e86:	e007      	b.n	8000e98 <__sfputs_r+0x22>
 8000e88:	7821      	ldrb	r1, [r4, #0]
 8000e8a:	003a      	movs	r2, r7
 8000e8c:	0030      	movs	r0, r6
 8000e8e:	f7ff ffdd 	bl	8000e4c <__sfputc_r>
 8000e92:	3401      	adds	r4, #1
 8000e94:	1c43      	adds	r3, r0, #1
 8000e96:	d1f3      	bne.n	8000e80 <__sfputs_r+0xa>
 8000e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e9c <_vfiprintf_r>:
 8000e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e9e:	b0a1      	sub	sp, #132	; 0x84
 8000ea0:	000f      	movs	r7, r1
 8000ea2:	0015      	movs	r5, r2
 8000ea4:	001e      	movs	r6, r3
 8000ea6:	9003      	str	r0, [sp, #12]
 8000ea8:	2800      	cmp	r0, #0
 8000eaa:	d004      	beq.n	8000eb6 <_vfiprintf_r+0x1a>
 8000eac:	6a03      	ldr	r3, [r0, #32]
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	d101      	bne.n	8000eb6 <_vfiprintf_r+0x1a>
 8000eb2:	f7ff fcb3 	bl	800081c <__sinit>
 8000eb6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000eb8:	07db      	lsls	r3, r3, #31
 8000eba:	d405      	bmi.n	8000ec8 <_vfiprintf_r+0x2c>
 8000ebc:	89bb      	ldrh	r3, [r7, #12]
 8000ebe:	059b      	lsls	r3, r3, #22
 8000ec0:	d402      	bmi.n	8000ec8 <_vfiprintf_r+0x2c>
 8000ec2:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000ec4:	f7ff fec1 	bl	8000c4a <__retarget_lock_acquire_recursive>
 8000ec8:	89bb      	ldrh	r3, [r7, #12]
 8000eca:	071b      	lsls	r3, r3, #28
 8000ecc:	d502      	bpl.n	8000ed4 <_vfiprintf_r+0x38>
 8000ece:	693b      	ldr	r3, [r7, #16]
 8000ed0:	2b00      	cmp	r3, #0
 8000ed2:	d113      	bne.n	8000efc <_vfiprintf_r+0x60>
 8000ed4:	0039      	movs	r1, r7
 8000ed6:	9803      	ldr	r0, [sp, #12]
 8000ed8:	f7ff fdd2 	bl	8000a80 <__swsetup_r>
 8000edc:	2800      	cmp	r0, #0
 8000ede:	d00d      	beq.n	8000efc <_vfiprintf_r+0x60>
 8000ee0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000ee2:	07db      	lsls	r3, r3, #31
 8000ee4:	d503      	bpl.n	8000eee <_vfiprintf_r+0x52>
 8000ee6:	2001      	movs	r0, #1
 8000ee8:	4240      	negs	r0, r0
 8000eea:	b021      	add	sp, #132	; 0x84
 8000eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eee:	89bb      	ldrh	r3, [r7, #12]
 8000ef0:	059b      	lsls	r3, r3, #22
 8000ef2:	d4f8      	bmi.n	8000ee6 <_vfiprintf_r+0x4a>
 8000ef4:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000ef6:	f7ff fea9 	bl	8000c4c <__retarget_lock_release_recursive>
 8000efa:	e7f4      	b.n	8000ee6 <_vfiprintf_r+0x4a>
 8000efc:	2300      	movs	r3, #0
 8000efe:	ac08      	add	r4, sp, #32
 8000f00:	6163      	str	r3, [r4, #20]
 8000f02:	3320      	adds	r3, #32
 8000f04:	7663      	strb	r3, [r4, #25]
 8000f06:	3310      	adds	r3, #16
 8000f08:	76a3      	strb	r3, [r4, #26]
 8000f0a:	9607      	str	r6, [sp, #28]
 8000f0c:	002e      	movs	r6, r5
 8000f0e:	7833      	ldrb	r3, [r6, #0]
 8000f10:	2b00      	cmp	r3, #0
 8000f12:	d001      	beq.n	8000f18 <_vfiprintf_r+0x7c>
 8000f14:	2b25      	cmp	r3, #37	; 0x25
 8000f16:	d148      	bne.n	8000faa <_vfiprintf_r+0x10e>
 8000f18:	1b73      	subs	r3, r6, r5
 8000f1a:	9305      	str	r3, [sp, #20]
 8000f1c:	42ae      	cmp	r6, r5
 8000f1e:	d00b      	beq.n	8000f38 <_vfiprintf_r+0x9c>
 8000f20:	002a      	movs	r2, r5
 8000f22:	0039      	movs	r1, r7
 8000f24:	9803      	ldr	r0, [sp, #12]
 8000f26:	f7ff ffa6 	bl	8000e76 <__sfputs_r>
 8000f2a:	3001      	adds	r0, #1
 8000f2c:	d100      	bne.n	8000f30 <_vfiprintf_r+0x94>
 8000f2e:	e0af      	b.n	8001090 <_vfiprintf_r+0x1f4>
 8000f30:	6963      	ldr	r3, [r4, #20]
 8000f32:	9a05      	ldr	r2, [sp, #20]
 8000f34:	189b      	adds	r3, r3, r2
 8000f36:	6163      	str	r3, [r4, #20]
 8000f38:	7833      	ldrb	r3, [r6, #0]
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d100      	bne.n	8000f40 <_vfiprintf_r+0xa4>
 8000f3e:	e0a7      	b.n	8001090 <_vfiprintf_r+0x1f4>
 8000f40:	2201      	movs	r2, #1
 8000f42:	2300      	movs	r3, #0
 8000f44:	4252      	negs	r2, r2
 8000f46:	6062      	str	r2, [r4, #4]
 8000f48:	a904      	add	r1, sp, #16
 8000f4a:	3254      	adds	r2, #84	; 0x54
 8000f4c:	1852      	adds	r2, r2, r1
 8000f4e:	1c75      	adds	r5, r6, #1
 8000f50:	6023      	str	r3, [r4, #0]
 8000f52:	60e3      	str	r3, [r4, #12]
 8000f54:	60a3      	str	r3, [r4, #8]
 8000f56:	7013      	strb	r3, [r2, #0]
 8000f58:	65a3      	str	r3, [r4, #88]	; 0x58
 8000f5a:	4b59      	ldr	r3, [pc, #356]	; (80010c0 <_vfiprintf_r+0x224>)
 8000f5c:	2205      	movs	r2, #5
 8000f5e:	0018      	movs	r0, r3
 8000f60:	7829      	ldrb	r1, [r5, #0]
 8000f62:	9305      	str	r3, [sp, #20]
 8000f64:	f000 fb88 	bl	8001678 <memchr>
 8000f68:	1c6e      	adds	r6, r5, #1
 8000f6a:	2800      	cmp	r0, #0
 8000f6c:	d11f      	bne.n	8000fae <_vfiprintf_r+0x112>
 8000f6e:	6822      	ldr	r2, [r4, #0]
 8000f70:	06d3      	lsls	r3, r2, #27
 8000f72:	d504      	bpl.n	8000f7e <_vfiprintf_r+0xe2>
 8000f74:	2353      	movs	r3, #83	; 0x53
 8000f76:	a904      	add	r1, sp, #16
 8000f78:	185b      	adds	r3, r3, r1
 8000f7a:	2120      	movs	r1, #32
 8000f7c:	7019      	strb	r1, [r3, #0]
 8000f7e:	0713      	lsls	r3, r2, #28
 8000f80:	d504      	bpl.n	8000f8c <_vfiprintf_r+0xf0>
 8000f82:	2353      	movs	r3, #83	; 0x53
 8000f84:	a904      	add	r1, sp, #16
 8000f86:	185b      	adds	r3, r3, r1
 8000f88:	212b      	movs	r1, #43	; 0x2b
 8000f8a:	7019      	strb	r1, [r3, #0]
 8000f8c:	782b      	ldrb	r3, [r5, #0]
 8000f8e:	2b2a      	cmp	r3, #42	; 0x2a
 8000f90:	d016      	beq.n	8000fc0 <_vfiprintf_r+0x124>
 8000f92:	002e      	movs	r6, r5
 8000f94:	2100      	movs	r1, #0
 8000f96:	200a      	movs	r0, #10
 8000f98:	68e3      	ldr	r3, [r4, #12]
 8000f9a:	7832      	ldrb	r2, [r6, #0]
 8000f9c:	1c75      	adds	r5, r6, #1
 8000f9e:	3a30      	subs	r2, #48	; 0x30
 8000fa0:	2a09      	cmp	r2, #9
 8000fa2:	d94e      	bls.n	8001042 <_vfiprintf_r+0x1a6>
 8000fa4:	2900      	cmp	r1, #0
 8000fa6:	d111      	bne.n	8000fcc <_vfiprintf_r+0x130>
 8000fa8:	e017      	b.n	8000fda <_vfiprintf_r+0x13e>
 8000faa:	3601      	adds	r6, #1
 8000fac:	e7af      	b.n	8000f0e <_vfiprintf_r+0x72>
 8000fae:	9b05      	ldr	r3, [sp, #20]
 8000fb0:	6822      	ldr	r2, [r4, #0]
 8000fb2:	1ac0      	subs	r0, r0, r3
 8000fb4:	2301      	movs	r3, #1
 8000fb6:	4083      	lsls	r3, r0
 8000fb8:	4313      	orrs	r3, r2
 8000fba:	0035      	movs	r5, r6
 8000fbc:	6023      	str	r3, [r4, #0]
 8000fbe:	e7cc      	b.n	8000f5a <_vfiprintf_r+0xbe>
 8000fc0:	9b07      	ldr	r3, [sp, #28]
 8000fc2:	1d19      	adds	r1, r3, #4
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	9107      	str	r1, [sp, #28]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	db01      	blt.n	8000fd0 <_vfiprintf_r+0x134>
 8000fcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8000fce:	e004      	b.n	8000fda <_vfiprintf_r+0x13e>
 8000fd0:	425b      	negs	r3, r3
 8000fd2:	60e3      	str	r3, [r4, #12]
 8000fd4:	2302      	movs	r3, #2
 8000fd6:	4313      	orrs	r3, r2
 8000fd8:	6023      	str	r3, [r4, #0]
 8000fda:	7833      	ldrb	r3, [r6, #0]
 8000fdc:	2b2e      	cmp	r3, #46	; 0x2e
 8000fde:	d10a      	bne.n	8000ff6 <_vfiprintf_r+0x15a>
 8000fe0:	7873      	ldrb	r3, [r6, #1]
 8000fe2:	2b2a      	cmp	r3, #42	; 0x2a
 8000fe4:	d135      	bne.n	8001052 <_vfiprintf_r+0x1b6>
 8000fe6:	9b07      	ldr	r3, [sp, #28]
 8000fe8:	3602      	adds	r6, #2
 8000fea:	1d1a      	adds	r2, r3, #4
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	9207      	str	r2, [sp, #28]
 8000ff0:	2b00      	cmp	r3, #0
 8000ff2:	db2b      	blt.n	800104c <_vfiprintf_r+0x1b0>
 8000ff4:	9309      	str	r3, [sp, #36]	; 0x24
 8000ff6:	4d33      	ldr	r5, [pc, #204]	; (80010c4 <_vfiprintf_r+0x228>)
 8000ff8:	2203      	movs	r2, #3
 8000ffa:	0028      	movs	r0, r5
 8000ffc:	7831      	ldrb	r1, [r6, #0]
 8000ffe:	f000 fb3b 	bl	8001678 <memchr>
 8001002:	2800      	cmp	r0, #0
 8001004:	d006      	beq.n	8001014 <_vfiprintf_r+0x178>
 8001006:	2340      	movs	r3, #64	; 0x40
 8001008:	1b40      	subs	r0, r0, r5
 800100a:	4083      	lsls	r3, r0
 800100c:	6822      	ldr	r2, [r4, #0]
 800100e:	3601      	adds	r6, #1
 8001010:	4313      	orrs	r3, r2
 8001012:	6023      	str	r3, [r4, #0]
 8001014:	7831      	ldrb	r1, [r6, #0]
 8001016:	2206      	movs	r2, #6
 8001018:	482b      	ldr	r0, [pc, #172]	; (80010c8 <_vfiprintf_r+0x22c>)
 800101a:	1c75      	adds	r5, r6, #1
 800101c:	7621      	strb	r1, [r4, #24]
 800101e:	f000 fb2b 	bl	8001678 <memchr>
 8001022:	2800      	cmp	r0, #0
 8001024:	d043      	beq.n	80010ae <_vfiprintf_r+0x212>
 8001026:	4b29      	ldr	r3, [pc, #164]	; (80010cc <_vfiprintf_r+0x230>)
 8001028:	2b00      	cmp	r3, #0
 800102a:	d125      	bne.n	8001078 <_vfiprintf_r+0x1dc>
 800102c:	2207      	movs	r2, #7
 800102e:	9b07      	ldr	r3, [sp, #28]
 8001030:	3307      	adds	r3, #7
 8001032:	4393      	bics	r3, r2
 8001034:	3308      	adds	r3, #8
 8001036:	9307      	str	r3, [sp, #28]
 8001038:	6963      	ldr	r3, [r4, #20]
 800103a:	9a04      	ldr	r2, [sp, #16]
 800103c:	189b      	adds	r3, r3, r2
 800103e:	6163      	str	r3, [r4, #20]
 8001040:	e764      	b.n	8000f0c <_vfiprintf_r+0x70>
 8001042:	4343      	muls	r3, r0
 8001044:	002e      	movs	r6, r5
 8001046:	2101      	movs	r1, #1
 8001048:	189b      	adds	r3, r3, r2
 800104a:	e7a6      	b.n	8000f9a <_vfiprintf_r+0xfe>
 800104c:	2301      	movs	r3, #1
 800104e:	425b      	negs	r3, r3
 8001050:	e7d0      	b.n	8000ff4 <_vfiprintf_r+0x158>
 8001052:	2300      	movs	r3, #0
 8001054:	200a      	movs	r0, #10
 8001056:	001a      	movs	r2, r3
 8001058:	3601      	adds	r6, #1
 800105a:	6063      	str	r3, [r4, #4]
 800105c:	7831      	ldrb	r1, [r6, #0]
 800105e:	1c75      	adds	r5, r6, #1
 8001060:	3930      	subs	r1, #48	; 0x30
 8001062:	2909      	cmp	r1, #9
 8001064:	d903      	bls.n	800106e <_vfiprintf_r+0x1d2>
 8001066:	2b00      	cmp	r3, #0
 8001068:	d0c5      	beq.n	8000ff6 <_vfiprintf_r+0x15a>
 800106a:	9209      	str	r2, [sp, #36]	; 0x24
 800106c:	e7c3      	b.n	8000ff6 <_vfiprintf_r+0x15a>
 800106e:	4342      	muls	r2, r0
 8001070:	002e      	movs	r6, r5
 8001072:	2301      	movs	r3, #1
 8001074:	1852      	adds	r2, r2, r1
 8001076:	e7f1      	b.n	800105c <_vfiprintf_r+0x1c0>
 8001078:	aa07      	add	r2, sp, #28
 800107a:	9200      	str	r2, [sp, #0]
 800107c:	0021      	movs	r1, r4
 800107e:	003a      	movs	r2, r7
 8001080:	4b13      	ldr	r3, [pc, #76]	; (80010d0 <_vfiprintf_r+0x234>)
 8001082:	9803      	ldr	r0, [sp, #12]
 8001084:	e000      	b.n	8001088 <_vfiprintf_r+0x1ec>
 8001086:	bf00      	nop
 8001088:	9004      	str	r0, [sp, #16]
 800108a:	9b04      	ldr	r3, [sp, #16]
 800108c:	3301      	adds	r3, #1
 800108e:	d1d3      	bne.n	8001038 <_vfiprintf_r+0x19c>
 8001090:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8001092:	07db      	lsls	r3, r3, #31
 8001094:	d405      	bmi.n	80010a2 <_vfiprintf_r+0x206>
 8001096:	89bb      	ldrh	r3, [r7, #12]
 8001098:	059b      	lsls	r3, r3, #22
 800109a:	d402      	bmi.n	80010a2 <_vfiprintf_r+0x206>
 800109c:	6db8      	ldr	r0, [r7, #88]	; 0x58
 800109e:	f7ff fdd5 	bl	8000c4c <__retarget_lock_release_recursive>
 80010a2:	89bb      	ldrh	r3, [r7, #12]
 80010a4:	065b      	lsls	r3, r3, #25
 80010a6:	d500      	bpl.n	80010aa <_vfiprintf_r+0x20e>
 80010a8:	e71d      	b.n	8000ee6 <_vfiprintf_r+0x4a>
 80010aa:	980d      	ldr	r0, [sp, #52]	; 0x34
 80010ac:	e71d      	b.n	8000eea <_vfiprintf_r+0x4e>
 80010ae:	aa07      	add	r2, sp, #28
 80010b0:	9200      	str	r2, [sp, #0]
 80010b2:	0021      	movs	r1, r4
 80010b4:	003a      	movs	r2, r7
 80010b6:	4b06      	ldr	r3, [pc, #24]	; (80010d0 <_vfiprintf_r+0x234>)
 80010b8:	9803      	ldr	r0, [sp, #12]
 80010ba:	f000 f87b 	bl	80011b4 <_printf_i>
 80010be:	e7e3      	b.n	8001088 <_vfiprintf_r+0x1ec>
 80010c0:	080016cd 	.word	0x080016cd
 80010c4:	080016d3 	.word	0x080016d3
 80010c8:	080016d7 	.word	0x080016d7
 80010cc:	00000000 	.word	0x00000000
 80010d0:	08000e77 	.word	0x08000e77

080010d4 <_printf_common>:
 80010d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80010d6:	0016      	movs	r6, r2
 80010d8:	9301      	str	r3, [sp, #4]
 80010da:	688a      	ldr	r2, [r1, #8]
 80010dc:	690b      	ldr	r3, [r1, #16]
 80010de:	000c      	movs	r4, r1
 80010e0:	9000      	str	r0, [sp, #0]
 80010e2:	4293      	cmp	r3, r2
 80010e4:	da00      	bge.n	80010e8 <_printf_common+0x14>
 80010e6:	0013      	movs	r3, r2
 80010e8:	0022      	movs	r2, r4
 80010ea:	6033      	str	r3, [r6, #0]
 80010ec:	3243      	adds	r2, #67	; 0x43
 80010ee:	7812      	ldrb	r2, [r2, #0]
 80010f0:	2a00      	cmp	r2, #0
 80010f2:	d001      	beq.n	80010f8 <_printf_common+0x24>
 80010f4:	3301      	adds	r3, #1
 80010f6:	6033      	str	r3, [r6, #0]
 80010f8:	6823      	ldr	r3, [r4, #0]
 80010fa:	069b      	lsls	r3, r3, #26
 80010fc:	d502      	bpl.n	8001104 <_printf_common+0x30>
 80010fe:	6833      	ldr	r3, [r6, #0]
 8001100:	3302      	adds	r3, #2
 8001102:	6033      	str	r3, [r6, #0]
 8001104:	6822      	ldr	r2, [r4, #0]
 8001106:	2306      	movs	r3, #6
 8001108:	0015      	movs	r5, r2
 800110a:	401d      	ands	r5, r3
 800110c:	421a      	tst	r2, r3
 800110e:	d027      	beq.n	8001160 <_printf_common+0x8c>
 8001110:	0023      	movs	r3, r4
 8001112:	3343      	adds	r3, #67	; 0x43
 8001114:	781b      	ldrb	r3, [r3, #0]
 8001116:	1e5a      	subs	r2, r3, #1
 8001118:	4193      	sbcs	r3, r2
 800111a:	6822      	ldr	r2, [r4, #0]
 800111c:	0692      	lsls	r2, r2, #26
 800111e:	d430      	bmi.n	8001182 <_printf_common+0xae>
 8001120:	0022      	movs	r2, r4
 8001122:	9901      	ldr	r1, [sp, #4]
 8001124:	9800      	ldr	r0, [sp, #0]
 8001126:	9d08      	ldr	r5, [sp, #32]
 8001128:	3243      	adds	r2, #67	; 0x43
 800112a:	47a8      	blx	r5
 800112c:	3001      	adds	r0, #1
 800112e:	d025      	beq.n	800117c <_printf_common+0xa8>
 8001130:	2206      	movs	r2, #6
 8001132:	6823      	ldr	r3, [r4, #0]
 8001134:	2500      	movs	r5, #0
 8001136:	4013      	ands	r3, r2
 8001138:	2b04      	cmp	r3, #4
 800113a:	d105      	bne.n	8001148 <_printf_common+0x74>
 800113c:	6833      	ldr	r3, [r6, #0]
 800113e:	68e5      	ldr	r5, [r4, #12]
 8001140:	1aed      	subs	r5, r5, r3
 8001142:	43eb      	mvns	r3, r5
 8001144:	17db      	asrs	r3, r3, #31
 8001146:	401d      	ands	r5, r3
 8001148:	68a3      	ldr	r3, [r4, #8]
 800114a:	6922      	ldr	r2, [r4, #16]
 800114c:	4293      	cmp	r3, r2
 800114e:	dd01      	ble.n	8001154 <_printf_common+0x80>
 8001150:	1a9b      	subs	r3, r3, r2
 8001152:	18ed      	adds	r5, r5, r3
 8001154:	2600      	movs	r6, #0
 8001156:	42b5      	cmp	r5, r6
 8001158:	d120      	bne.n	800119c <_printf_common+0xc8>
 800115a:	2000      	movs	r0, #0
 800115c:	e010      	b.n	8001180 <_printf_common+0xac>
 800115e:	3501      	adds	r5, #1
 8001160:	68e3      	ldr	r3, [r4, #12]
 8001162:	6832      	ldr	r2, [r6, #0]
 8001164:	1a9b      	subs	r3, r3, r2
 8001166:	42ab      	cmp	r3, r5
 8001168:	ddd2      	ble.n	8001110 <_printf_common+0x3c>
 800116a:	0022      	movs	r2, r4
 800116c:	2301      	movs	r3, #1
 800116e:	9901      	ldr	r1, [sp, #4]
 8001170:	9800      	ldr	r0, [sp, #0]
 8001172:	9f08      	ldr	r7, [sp, #32]
 8001174:	3219      	adds	r2, #25
 8001176:	47b8      	blx	r7
 8001178:	3001      	adds	r0, #1
 800117a:	d1f0      	bne.n	800115e <_printf_common+0x8a>
 800117c:	2001      	movs	r0, #1
 800117e:	4240      	negs	r0, r0
 8001180:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001182:	2030      	movs	r0, #48	; 0x30
 8001184:	18e1      	adds	r1, r4, r3
 8001186:	3143      	adds	r1, #67	; 0x43
 8001188:	7008      	strb	r0, [r1, #0]
 800118a:	0021      	movs	r1, r4
 800118c:	1c5a      	adds	r2, r3, #1
 800118e:	3145      	adds	r1, #69	; 0x45
 8001190:	7809      	ldrb	r1, [r1, #0]
 8001192:	18a2      	adds	r2, r4, r2
 8001194:	3243      	adds	r2, #67	; 0x43
 8001196:	3302      	adds	r3, #2
 8001198:	7011      	strb	r1, [r2, #0]
 800119a:	e7c1      	b.n	8001120 <_printf_common+0x4c>
 800119c:	0022      	movs	r2, r4
 800119e:	2301      	movs	r3, #1
 80011a0:	9901      	ldr	r1, [sp, #4]
 80011a2:	9800      	ldr	r0, [sp, #0]
 80011a4:	9f08      	ldr	r7, [sp, #32]
 80011a6:	321a      	adds	r2, #26
 80011a8:	47b8      	blx	r7
 80011aa:	3001      	adds	r0, #1
 80011ac:	d0e6      	beq.n	800117c <_printf_common+0xa8>
 80011ae:	3601      	adds	r6, #1
 80011b0:	e7d1      	b.n	8001156 <_printf_common+0x82>
	...

080011b4 <_printf_i>:
 80011b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011b6:	b08b      	sub	sp, #44	; 0x2c
 80011b8:	9206      	str	r2, [sp, #24]
 80011ba:	000a      	movs	r2, r1
 80011bc:	3243      	adds	r2, #67	; 0x43
 80011be:	9307      	str	r3, [sp, #28]
 80011c0:	9005      	str	r0, [sp, #20]
 80011c2:	9204      	str	r2, [sp, #16]
 80011c4:	7e0a      	ldrb	r2, [r1, #24]
 80011c6:	000c      	movs	r4, r1
 80011c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80011ca:	2a78      	cmp	r2, #120	; 0x78
 80011cc:	d809      	bhi.n	80011e2 <_printf_i+0x2e>
 80011ce:	2a62      	cmp	r2, #98	; 0x62
 80011d0:	d80b      	bhi.n	80011ea <_printf_i+0x36>
 80011d2:	2a00      	cmp	r2, #0
 80011d4:	d100      	bne.n	80011d8 <_printf_i+0x24>
 80011d6:	e0be      	b.n	8001356 <_printf_i+0x1a2>
 80011d8:	497c      	ldr	r1, [pc, #496]	; (80013cc <_printf_i+0x218>)
 80011da:	9103      	str	r1, [sp, #12]
 80011dc:	2a58      	cmp	r2, #88	; 0x58
 80011de:	d100      	bne.n	80011e2 <_printf_i+0x2e>
 80011e0:	e093      	b.n	800130a <_printf_i+0x156>
 80011e2:	0026      	movs	r6, r4
 80011e4:	3642      	adds	r6, #66	; 0x42
 80011e6:	7032      	strb	r2, [r6, #0]
 80011e8:	e022      	b.n	8001230 <_printf_i+0x7c>
 80011ea:	0010      	movs	r0, r2
 80011ec:	3863      	subs	r0, #99	; 0x63
 80011ee:	2815      	cmp	r0, #21
 80011f0:	d8f7      	bhi.n	80011e2 <_printf_i+0x2e>
 80011f2:	f7fe ff89 	bl	8000108 <__gnu_thumb1_case_shi>
 80011f6:	0016      	.short	0x0016
 80011f8:	fff6001f 	.word	0xfff6001f
 80011fc:	fff6fff6 	.word	0xfff6fff6
 8001200:	001ffff6 	.word	0x001ffff6
 8001204:	fff6fff6 	.word	0xfff6fff6
 8001208:	fff6fff6 	.word	0xfff6fff6
 800120c:	003600a3 	.word	0x003600a3
 8001210:	fff60083 	.word	0xfff60083
 8001214:	00b4fff6 	.word	0x00b4fff6
 8001218:	0036fff6 	.word	0x0036fff6
 800121c:	fff6fff6 	.word	0xfff6fff6
 8001220:	0087      	.short	0x0087
 8001222:	0026      	movs	r6, r4
 8001224:	681a      	ldr	r2, [r3, #0]
 8001226:	3642      	adds	r6, #66	; 0x42
 8001228:	1d11      	adds	r1, r2, #4
 800122a:	6019      	str	r1, [r3, #0]
 800122c:	6813      	ldr	r3, [r2, #0]
 800122e:	7033      	strb	r3, [r6, #0]
 8001230:	2301      	movs	r3, #1
 8001232:	e0a2      	b.n	800137a <_printf_i+0x1c6>
 8001234:	6818      	ldr	r0, [r3, #0]
 8001236:	6809      	ldr	r1, [r1, #0]
 8001238:	1d02      	adds	r2, r0, #4
 800123a:	060d      	lsls	r5, r1, #24
 800123c:	d50b      	bpl.n	8001256 <_printf_i+0xa2>
 800123e:	6805      	ldr	r5, [r0, #0]
 8001240:	601a      	str	r2, [r3, #0]
 8001242:	2d00      	cmp	r5, #0
 8001244:	da03      	bge.n	800124e <_printf_i+0x9a>
 8001246:	232d      	movs	r3, #45	; 0x2d
 8001248:	9a04      	ldr	r2, [sp, #16]
 800124a:	426d      	negs	r5, r5
 800124c:	7013      	strb	r3, [r2, #0]
 800124e:	4b5f      	ldr	r3, [pc, #380]	; (80013cc <_printf_i+0x218>)
 8001250:	270a      	movs	r7, #10
 8001252:	9303      	str	r3, [sp, #12]
 8001254:	e01b      	b.n	800128e <_printf_i+0xda>
 8001256:	6805      	ldr	r5, [r0, #0]
 8001258:	601a      	str	r2, [r3, #0]
 800125a:	0649      	lsls	r1, r1, #25
 800125c:	d5f1      	bpl.n	8001242 <_printf_i+0x8e>
 800125e:	b22d      	sxth	r5, r5
 8001260:	e7ef      	b.n	8001242 <_printf_i+0x8e>
 8001262:	680d      	ldr	r5, [r1, #0]
 8001264:	6819      	ldr	r1, [r3, #0]
 8001266:	1d08      	adds	r0, r1, #4
 8001268:	6018      	str	r0, [r3, #0]
 800126a:	062e      	lsls	r6, r5, #24
 800126c:	d501      	bpl.n	8001272 <_printf_i+0xbe>
 800126e:	680d      	ldr	r5, [r1, #0]
 8001270:	e003      	b.n	800127a <_printf_i+0xc6>
 8001272:	066d      	lsls	r5, r5, #25
 8001274:	d5fb      	bpl.n	800126e <_printf_i+0xba>
 8001276:	680d      	ldr	r5, [r1, #0]
 8001278:	b2ad      	uxth	r5, r5
 800127a:	4b54      	ldr	r3, [pc, #336]	; (80013cc <_printf_i+0x218>)
 800127c:	2708      	movs	r7, #8
 800127e:	9303      	str	r3, [sp, #12]
 8001280:	2a6f      	cmp	r2, #111	; 0x6f
 8001282:	d000      	beq.n	8001286 <_printf_i+0xd2>
 8001284:	3702      	adds	r7, #2
 8001286:	0023      	movs	r3, r4
 8001288:	2200      	movs	r2, #0
 800128a:	3343      	adds	r3, #67	; 0x43
 800128c:	701a      	strb	r2, [r3, #0]
 800128e:	6863      	ldr	r3, [r4, #4]
 8001290:	60a3      	str	r3, [r4, #8]
 8001292:	2b00      	cmp	r3, #0
 8001294:	db03      	blt.n	800129e <_printf_i+0xea>
 8001296:	2104      	movs	r1, #4
 8001298:	6822      	ldr	r2, [r4, #0]
 800129a:	438a      	bics	r2, r1
 800129c:	6022      	str	r2, [r4, #0]
 800129e:	2d00      	cmp	r5, #0
 80012a0:	d102      	bne.n	80012a8 <_printf_i+0xf4>
 80012a2:	9e04      	ldr	r6, [sp, #16]
 80012a4:	2b00      	cmp	r3, #0
 80012a6:	d00c      	beq.n	80012c2 <_printf_i+0x10e>
 80012a8:	9e04      	ldr	r6, [sp, #16]
 80012aa:	0028      	movs	r0, r5
 80012ac:	0039      	movs	r1, r7
 80012ae:	f7fe ffbb 	bl	8000228 <__aeabi_uidivmod>
 80012b2:	9b03      	ldr	r3, [sp, #12]
 80012b4:	3e01      	subs	r6, #1
 80012b6:	5c5b      	ldrb	r3, [r3, r1]
 80012b8:	7033      	strb	r3, [r6, #0]
 80012ba:	002b      	movs	r3, r5
 80012bc:	0005      	movs	r5, r0
 80012be:	429f      	cmp	r7, r3
 80012c0:	d9f3      	bls.n	80012aa <_printf_i+0xf6>
 80012c2:	2f08      	cmp	r7, #8
 80012c4:	d109      	bne.n	80012da <_printf_i+0x126>
 80012c6:	6823      	ldr	r3, [r4, #0]
 80012c8:	07db      	lsls	r3, r3, #31
 80012ca:	d506      	bpl.n	80012da <_printf_i+0x126>
 80012cc:	6862      	ldr	r2, [r4, #4]
 80012ce:	6923      	ldr	r3, [r4, #16]
 80012d0:	429a      	cmp	r2, r3
 80012d2:	dc02      	bgt.n	80012da <_printf_i+0x126>
 80012d4:	2330      	movs	r3, #48	; 0x30
 80012d6:	3e01      	subs	r6, #1
 80012d8:	7033      	strb	r3, [r6, #0]
 80012da:	9b04      	ldr	r3, [sp, #16]
 80012dc:	1b9b      	subs	r3, r3, r6
 80012de:	6123      	str	r3, [r4, #16]
 80012e0:	9b07      	ldr	r3, [sp, #28]
 80012e2:	0021      	movs	r1, r4
 80012e4:	9300      	str	r3, [sp, #0]
 80012e6:	9805      	ldr	r0, [sp, #20]
 80012e8:	9b06      	ldr	r3, [sp, #24]
 80012ea:	aa09      	add	r2, sp, #36	; 0x24
 80012ec:	f7ff fef2 	bl	80010d4 <_printf_common>
 80012f0:	3001      	adds	r0, #1
 80012f2:	d147      	bne.n	8001384 <_printf_i+0x1d0>
 80012f4:	2001      	movs	r0, #1
 80012f6:	4240      	negs	r0, r0
 80012f8:	b00b      	add	sp, #44	; 0x2c
 80012fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012fc:	2220      	movs	r2, #32
 80012fe:	6809      	ldr	r1, [r1, #0]
 8001300:	430a      	orrs	r2, r1
 8001302:	6022      	str	r2, [r4, #0]
 8001304:	2278      	movs	r2, #120	; 0x78
 8001306:	4932      	ldr	r1, [pc, #200]	; (80013d0 <_printf_i+0x21c>)
 8001308:	9103      	str	r1, [sp, #12]
 800130a:	0021      	movs	r1, r4
 800130c:	3145      	adds	r1, #69	; 0x45
 800130e:	700a      	strb	r2, [r1, #0]
 8001310:	6819      	ldr	r1, [r3, #0]
 8001312:	6822      	ldr	r2, [r4, #0]
 8001314:	c920      	ldmia	r1!, {r5}
 8001316:	0610      	lsls	r0, r2, #24
 8001318:	d402      	bmi.n	8001320 <_printf_i+0x16c>
 800131a:	0650      	lsls	r0, r2, #25
 800131c:	d500      	bpl.n	8001320 <_printf_i+0x16c>
 800131e:	b2ad      	uxth	r5, r5
 8001320:	6019      	str	r1, [r3, #0]
 8001322:	07d3      	lsls	r3, r2, #31
 8001324:	d502      	bpl.n	800132c <_printf_i+0x178>
 8001326:	2320      	movs	r3, #32
 8001328:	4313      	orrs	r3, r2
 800132a:	6023      	str	r3, [r4, #0]
 800132c:	2710      	movs	r7, #16
 800132e:	2d00      	cmp	r5, #0
 8001330:	d1a9      	bne.n	8001286 <_printf_i+0xd2>
 8001332:	2220      	movs	r2, #32
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	4393      	bics	r3, r2
 8001338:	6023      	str	r3, [r4, #0]
 800133a:	e7a4      	b.n	8001286 <_printf_i+0xd2>
 800133c:	681a      	ldr	r2, [r3, #0]
 800133e:	680d      	ldr	r5, [r1, #0]
 8001340:	1d10      	adds	r0, r2, #4
 8001342:	6949      	ldr	r1, [r1, #20]
 8001344:	6018      	str	r0, [r3, #0]
 8001346:	6813      	ldr	r3, [r2, #0]
 8001348:	062e      	lsls	r6, r5, #24
 800134a:	d501      	bpl.n	8001350 <_printf_i+0x19c>
 800134c:	6019      	str	r1, [r3, #0]
 800134e:	e002      	b.n	8001356 <_printf_i+0x1a2>
 8001350:	066d      	lsls	r5, r5, #25
 8001352:	d5fb      	bpl.n	800134c <_printf_i+0x198>
 8001354:	8019      	strh	r1, [r3, #0]
 8001356:	2300      	movs	r3, #0
 8001358:	9e04      	ldr	r6, [sp, #16]
 800135a:	6123      	str	r3, [r4, #16]
 800135c:	e7c0      	b.n	80012e0 <_printf_i+0x12c>
 800135e:	681a      	ldr	r2, [r3, #0]
 8001360:	1d11      	adds	r1, r2, #4
 8001362:	6019      	str	r1, [r3, #0]
 8001364:	6816      	ldr	r6, [r2, #0]
 8001366:	2100      	movs	r1, #0
 8001368:	0030      	movs	r0, r6
 800136a:	6862      	ldr	r2, [r4, #4]
 800136c:	f000 f984 	bl	8001678 <memchr>
 8001370:	2800      	cmp	r0, #0
 8001372:	d001      	beq.n	8001378 <_printf_i+0x1c4>
 8001374:	1b80      	subs	r0, r0, r6
 8001376:	6060      	str	r0, [r4, #4]
 8001378:	6863      	ldr	r3, [r4, #4]
 800137a:	6123      	str	r3, [r4, #16]
 800137c:	2300      	movs	r3, #0
 800137e:	9a04      	ldr	r2, [sp, #16]
 8001380:	7013      	strb	r3, [r2, #0]
 8001382:	e7ad      	b.n	80012e0 <_printf_i+0x12c>
 8001384:	0032      	movs	r2, r6
 8001386:	6923      	ldr	r3, [r4, #16]
 8001388:	9906      	ldr	r1, [sp, #24]
 800138a:	9805      	ldr	r0, [sp, #20]
 800138c:	9d07      	ldr	r5, [sp, #28]
 800138e:	47a8      	blx	r5
 8001390:	3001      	adds	r0, #1
 8001392:	d0af      	beq.n	80012f4 <_printf_i+0x140>
 8001394:	6823      	ldr	r3, [r4, #0]
 8001396:	079b      	lsls	r3, r3, #30
 8001398:	d415      	bmi.n	80013c6 <_printf_i+0x212>
 800139a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800139c:	68e0      	ldr	r0, [r4, #12]
 800139e:	4298      	cmp	r0, r3
 80013a0:	daaa      	bge.n	80012f8 <_printf_i+0x144>
 80013a2:	0018      	movs	r0, r3
 80013a4:	e7a8      	b.n	80012f8 <_printf_i+0x144>
 80013a6:	0022      	movs	r2, r4
 80013a8:	2301      	movs	r3, #1
 80013aa:	9906      	ldr	r1, [sp, #24]
 80013ac:	9805      	ldr	r0, [sp, #20]
 80013ae:	9e07      	ldr	r6, [sp, #28]
 80013b0:	3219      	adds	r2, #25
 80013b2:	47b0      	blx	r6
 80013b4:	3001      	adds	r0, #1
 80013b6:	d09d      	beq.n	80012f4 <_printf_i+0x140>
 80013b8:	3501      	adds	r5, #1
 80013ba:	68e3      	ldr	r3, [r4, #12]
 80013bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80013be:	1a9b      	subs	r3, r3, r2
 80013c0:	42ab      	cmp	r3, r5
 80013c2:	dcf0      	bgt.n	80013a6 <_printf_i+0x1f2>
 80013c4:	e7e9      	b.n	800139a <_printf_i+0x1e6>
 80013c6:	2500      	movs	r5, #0
 80013c8:	e7f7      	b.n	80013ba <_printf_i+0x206>
 80013ca:	46c0      	nop			; (mov r8, r8)
 80013cc:	080016de 	.word	0x080016de
 80013d0:	080016ef 	.word	0x080016ef

080013d4 <__sflush_r>:
 80013d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013d6:	898b      	ldrh	r3, [r1, #12]
 80013d8:	0005      	movs	r5, r0
 80013da:	000c      	movs	r4, r1
 80013dc:	071a      	lsls	r2, r3, #28
 80013de:	d45c      	bmi.n	800149a <__sflush_r+0xc6>
 80013e0:	684a      	ldr	r2, [r1, #4]
 80013e2:	2a00      	cmp	r2, #0
 80013e4:	dc04      	bgt.n	80013f0 <__sflush_r+0x1c>
 80013e6:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80013e8:	2a00      	cmp	r2, #0
 80013ea:	dc01      	bgt.n	80013f0 <__sflush_r+0x1c>
 80013ec:	2000      	movs	r0, #0
 80013ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80013f0:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80013f2:	2f00      	cmp	r7, #0
 80013f4:	d0fa      	beq.n	80013ec <__sflush_r+0x18>
 80013f6:	2200      	movs	r2, #0
 80013f8:	2080      	movs	r0, #128	; 0x80
 80013fa:	682e      	ldr	r6, [r5, #0]
 80013fc:	602a      	str	r2, [r5, #0]
 80013fe:	001a      	movs	r2, r3
 8001400:	0140      	lsls	r0, r0, #5
 8001402:	6a21      	ldr	r1, [r4, #32]
 8001404:	4002      	ands	r2, r0
 8001406:	4203      	tst	r3, r0
 8001408:	d034      	beq.n	8001474 <__sflush_r+0xa0>
 800140a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800140c:	89a3      	ldrh	r3, [r4, #12]
 800140e:	075b      	lsls	r3, r3, #29
 8001410:	d506      	bpl.n	8001420 <__sflush_r+0x4c>
 8001412:	6863      	ldr	r3, [r4, #4]
 8001414:	1ac0      	subs	r0, r0, r3
 8001416:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <__sflush_r+0x4c>
 800141c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800141e:	1ac0      	subs	r0, r0, r3
 8001420:	0002      	movs	r2, r0
 8001422:	2300      	movs	r3, #0
 8001424:	0028      	movs	r0, r5
 8001426:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001428:	6a21      	ldr	r1, [r4, #32]
 800142a:	47b8      	blx	r7
 800142c:	89a2      	ldrh	r2, [r4, #12]
 800142e:	1c43      	adds	r3, r0, #1
 8001430:	d106      	bne.n	8001440 <__sflush_r+0x6c>
 8001432:	6829      	ldr	r1, [r5, #0]
 8001434:	291d      	cmp	r1, #29
 8001436:	d82c      	bhi.n	8001492 <__sflush_r+0xbe>
 8001438:	4b2a      	ldr	r3, [pc, #168]	; (80014e4 <__sflush_r+0x110>)
 800143a:	410b      	asrs	r3, r1
 800143c:	07db      	lsls	r3, r3, #31
 800143e:	d428      	bmi.n	8001492 <__sflush_r+0xbe>
 8001440:	2300      	movs	r3, #0
 8001442:	6063      	str	r3, [r4, #4]
 8001444:	6923      	ldr	r3, [r4, #16]
 8001446:	6023      	str	r3, [r4, #0]
 8001448:	04d2      	lsls	r2, r2, #19
 800144a:	d505      	bpl.n	8001458 <__sflush_r+0x84>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <__sflush_r+0x82>
 8001450:	682b      	ldr	r3, [r5, #0]
 8001452:	2b00      	cmp	r3, #0
 8001454:	d100      	bne.n	8001458 <__sflush_r+0x84>
 8001456:	6560      	str	r0, [r4, #84]	; 0x54
 8001458:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800145a:	602e      	str	r6, [r5, #0]
 800145c:	2900      	cmp	r1, #0
 800145e:	d0c5      	beq.n	80013ec <__sflush_r+0x18>
 8001460:	0023      	movs	r3, r4
 8001462:	3344      	adds	r3, #68	; 0x44
 8001464:	4299      	cmp	r1, r3
 8001466:	d002      	beq.n	800146e <__sflush_r+0x9a>
 8001468:	0028      	movs	r0, r5
 800146a:	f7ff fbf1 	bl	8000c50 <_free_r>
 800146e:	2000      	movs	r0, #0
 8001470:	6360      	str	r0, [r4, #52]	; 0x34
 8001472:	e7bc      	b.n	80013ee <__sflush_r+0x1a>
 8001474:	2301      	movs	r3, #1
 8001476:	0028      	movs	r0, r5
 8001478:	47b8      	blx	r7
 800147a:	1c43      	adds	r3, r0, #1
 800147c:	d1c6      	bne.n	800140c <__sflush_r+0x38>
 800147e:	682b      	ldr	r3, [r5, #0]
 8001480:	2b00      	cmp	r3, #0
 8001482:	d0c3      	beq.n	800140c <__sflush_r+0x38>
 8001484:	2b1d      	cmp	r3, #29
 8001486:	d001      	beq.n	800148c <__sflush_r+0xb8>
 8001488:	2b16      	cmp	r3, #22
 800148a:	d101      	bne.n	8001490 <__sflush_r+0xbc>
 800148c:	602e      	str	r6, [r5, #0]
 800148e:	e7ad      	b.n	80013ec <__sflush_r+0x18>
 8001490:	89a2      	ldrh	r2, [r4, #12]
 8001492:	2340      	movs	r3, #64	; 0x40
 8001494:	4313      	orrs	r3, r2
 8001496:	81a3      	strh	r3, [r4, #12]
 8001498:	e7a9      	b.n	80013ee <__sflush_r+0x1a>
 800149a:	690e      	ldr	r6, [r1, #16]
 800149c:	2e00      	cmp	r6, #0
 800149e:	d0a5      	beq.n	80013ec <__sflush_r+0x18>
 80014a0:	680f      	ldr	r7, [r1, #0]
 80014a2:	600e      	str	r6, [r1, #0]
 80014a4:	1bba      	subs	r2, r7, r6
 80014a6:	9201      	str	r2, [sp, #4]
 80014a8:	2200      	movs	r2, #0
 80014aa:	079b      	lsls	r3, r3, #30
 80014ac:	d100      	bne.n	80014b0 <__sflush_r+0xdc>
 80014ae:	694a      	ldr	r2, [r1, #20]
 80014b0:	60a2      	str	r2, [r4, #8]
 80014b2:	9b01      	ldr	r3, [sp, #4]
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	dd99      	ble.n	80013ec <__sflush_r+0x18>
 80014b8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80014ba:	0032      	movs	r2, r6
 80014bc:	001f      	movs	r7, r3
 80014be:	0028      	movs	r0, r5
 80014c0:	9b01      	ldr	r3, [sp, #4]
 80014c2:	6a21      	ldr	r1, [r4, #32]
 80014c4:	47b8      	blx	r7
 80014c6:	2800      	cmp	r0, #0
 80014c8:	dc06      	bgt.n	80014d8 <__sflush_r+0x104>
 80014ca:	2340      	movs	r3, #64	; 0x40
 80014cc:	2001      	movs	r0, #1
 80014ce:	89a2      	ldrh	r2, [r4, #12]
 80014d0:	4240      	negs	r0, r0
 80014d2:	4313      	orrs	r3, r2
 80014d4:	81a3      	strh	r3, [r4, #12]
 80014d6:	e78a      	b.n	80013ee <__sflush_r+0x1a>
 80014d8:	9b01      	ldr	r3, [sp, #4]
 80014da:	1836      	adds	r6, r6, r0
 80014dc:	1a1b      	subs	r3, r3, r0
 80014de:	9301      	str	r3, [sp, #4]
 80014e0:	e7e7      	b.n	80014b2 <__sflush_r+0xde>
 80014e2:	46c0      	nop			; (mov r8, r8)
 80014e4:	dfbffffe 	.word	0xdfbffffe

080014e8 <_fflush_r>:
 80014e8:	690b      	ldr	r3, [r1, #16]
 80014ea:	b570      	push	{r4, r5, r6, lr}
 80014ec:	0005      	movs	r5, r0
 80014ee:	000c      	movs	r4, r1
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	d102      	bne.n	80014fa <_fflush_r+0x12>
 80014f4:	2500      	movs	r5, #0
 80014f6:	0028      	movs	r0, r5
 80014f8:	bd70      	pop	{r4, r5, r6, pc}
 80014fa:	2800      	cmp	r0, #0
 80014fc:	d004      	beq.n	8001508 <_fflush_r+0x20>
 80014fe:	6a03      	ldr	r3, [r0, #32]
 8001500:	2b00      	cmp	r3, #0
 8001502:	d101      	bne.n	8001508 <_fflush_r+0x20>
 8001504:	f7ff f98a 	bl	800081c <__sinit>
 8001508:	220c      	movs	r2, #12
 800150a:	5ea3      	ldrsh	r3, [r4, r2]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d0f1      	beq.n	80014f4 <_fflush_r+0xc>
 8001510:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001512:	07d2      	lsls	r2, r2, #31
 8001514:	d404      	bmi.n	8001520 <_fflush_r+0x38>
 8001516:	059b      	lsls	r3, r3, #22
 8001518:	d402      	bmi.n	8001520 <_fflush_r+0x38>
 800151a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800151c:	f7ff fb95 	bl	8000c4a <__retarget_lock_acquire_recursive>
 8001520:	0028      	movs	r0, r5
 8001522:	0021      	movs	r1, r4
 8001524:	f7ff ff56 	bl	80013d4 <__sflush_r>
 8001528:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800152a:	0005      	movs	r5, r0
 800152c:	07db      	lsls	r3, r3, #31
 800152e:	d4e2      	bmi.n	80014f6 <_fflush_r+0xe>
 8001530:	89a3      	ldrh	r3, [r4, #12]
 8001532:	059b      	lsls	r3, r3, #22
 8001534:	d4df      	bmi.n	80014f6 <_fflush_r+0xe>
 8001536:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001538:	f7ff fb88 	bl	8000c4c <__retarget_lock_release_recursive>
 800153c:	e7db      	b.n	80014f6 <_fflush_r+0xe>
	...

08001540 <__swhatbuf_r>:
 8001540:	b570      	push	{r4, r5, r6, lr}
 8001542:	000e      	movs	r6, r1
 8001544:	001d      	movs	r5, r3
 8001546:	230e      	movs	r3, #14
 8001548:	5ec9      	ldrsh	r1, [r1, r3]
 800154a:	0014      	movs	r4, r2
 800154c:	b096      	sub	sp, #88	; 0x58
 800154e:	2900      	cmp	r1, #0
 8001550:	da0c      	bge.n	800156c <__swhatbuf_r+0x2c>
 8001552:	89b2      	ldrh	r2, [r6, #12]
 8001554:	2380      	movs	r3, #128	; 0x80
 8001556:	0011      	movs	r1, r2
 8001558:	4019      	ands	r1, r3
 800155a:	421a      	tst	r2, r3
 800155c:	d013      	beq.n	8001586 <__swhatbuf_r+0x46>
 800155e:	2100      	movs	r1, #0
 8001560:	3b40      	subs	r3, #64	; 0x40
 8001562:	2000      	movs	r0, #0
 8001564:	6029      	str	r1, [r5, #0]
 8001566:	6023      	str	r3, [r4, #0]
 8001568:	b016      	add	sp, #88	; 0x58
 800156a:	bd70      	pop	{r4, r5, r6, pc}
 800156c:	466a      	mov	r2, sp
 800156e:	f000 f84d 	bl	800160c <_fstat_r>
 8001572:	2800      	cmp	r0, #0
 8001574:	dbed      	blt.n	8001552 <__swhatbuf_r+0x12>
 8001576:	23f0      	movs	r3, #240	; 0xf0
 8001578:	9901      	ldr	r1, [sp, #4]
 800157a:	021b      	lsls	r3, r3, #8
 800157c:	4019      	ands	r1, r3
 800157e:	4b03      	ldr	r3, [pc, #12]	; (800158c <__swhatbuf_r+0x4c>)
 8001580:	18c9      	adds	r1, r1, r3
 8001582:	424b      	negs	r3, r1
 8001584:	4159      	adcs	r1, r3
 8001586:	2380      	movs	r3, #128	; 0x80
 8001588:	00db      	lsls	r3, r3, #3
 800158a:	e7ea      	b.n	8001562 <__swhatbuf_r+0x22>
 800158c:	ffffe000 	.word	0xffffe000

08001590 <__smakebuf_r>:
 8001590:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001592:	2602      	movs	r6, #2
 8001594:	898b      	ldrh	r3, [r1, #12]
 8001596:	0005      	movs	r5, r0
 8001598:	000c      	movs	r4, r1
 800159a:	4233      	tst	r3, r6
 800159c:	d006      	beq.n	80015ac <__smakebuf_r+0x1c>
 800159e:	0023      	movs	r3, r4
 80015a0:	3347      	adds	r3, #71	; 0x47
 80015a2:	6023      	str	r3, [r4, #0]
 80015a4:	6123      	str	r3, [r4, #16]
 80015a6:	2301      	movs	r3, #1
 80015a8:	6163      	str	r3, [r4, #20]
 80015aa:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80015ac:	466a      	mov	r2, sp
 80015ae:	ab01      	add	r3, sp, #4
 80015b0:	f7ff ffc6 	bl	8001540 <__swhatbuf_r>
 80015b4:	9900      	ldr	r1, [sp, #0]
 80015b6:	0007      	movs	r7, r0
 80015b8:	0028      	movs	r0, r5
 80015ba:	f7ff fbb5 	bl	8000d28 <_malloc_r>
 80015be:	2800      	cmp	r0, #0
 80015c0:	d108      	bne.n	80015d4 <__smakebuf_r+0x44>
 80015c2:	220c      	movs	r2, #12
 80015c4:	5ea3      	ldrsh	r3, [r4, r2]
 80015c6:	059a      	lsls	r2, r3, #22
 80015c8:	d4ef      	bmi.n	80015aa <__smakebuf_r+0x1a>
 80015ca:	2203      	movs	r2, #3
 80015cc:	4393      	bics	r3, r2
 80015ce:	431e      	orrs	r6, r3
 80015d0:	81a6      	strh	r6, [r4, #12]
 80015d2:	e7e4      	b.n	800159e <__smakebuf_r+0xe>
 80015d4:	2380      	movs	r3, #128	; 0x80
 80015d6:	89a2      	ldrh	r2, [r4, #12]
 80015d8:	6020      	str	r0, [r4, #0]
 80015da:	4313      	orrs	r3, r2
 80015dc:	81a3      	strh	r3, [r4, #12]
 80015de:	9b00      	ldr	r3, [sp, #0]
 80015e0:	6120      	str	r0, [r4, #16]
 80015e2:	6163      	str	r3, [r4, #20]
 80015e4:	9b01      	ldr	r3, [sp, #4]
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	d00c      	beq.n	8001604 <__smakebuf_r+0x74>
 80015ea:	0028      	movs	r0, r5
 80015ec:	230e      	movs	r3, #14
 80015ee:	5ee1      	ldrsh	r1, [r4, r3]
 80015f0:	f000 f81e 	bl	8001630 <_isatty_r>
 80015f4:	2800      	cmp	r0, #0
 80015f6:	d005      	beq.n	8001604 <__smakebuf_r+0x74>
 80015f8:	2303      	movs	r3, #3
 80015fa:	89a2      	ldrh	r2, [r4, #12]
 80015fc:	439a      	bics	r2, r3
 80015fe:	3b02      	subs	r3, #2
 8001600:	4313      	orrs	r3, r2
 8001602:	81a3      	strh	r3, [r4, #12]
 8001604:	89a3      	ldrh	r3, [r4, #12]
 8001606:	433b      	orrs	r3, r7
 8001608:	81a3      	strh	r3, [r4, #12]
 800160a:	e7ce      	b.n	80015aa <__smakebuf_r+0x1a>

0800160c <_fstat_r>:
 800160c:	2300      	movs	r3, #0
 800160e:	b570      	push	{r4, r5, r6, lr}
 8001610:	4d06      	ldr	r5, [pc, #24]	; (800162c <_fstat_r+0x20>)
 8001612:	0004      	movs	r4, r0
 8001614:	0008      	movs	r0, r1
 8001616:	0011      	movs	r1, r2
 8001618:	602b      	str	r3, [r5, #0]
 800161a:	f7fe ff18 	bl	800044e <_fstat>
 800161e:	1c43      	adds	r3, r0, #1
 8001620:	d103      	bne.n	800162a <_fstat_r+0x1e>
 8001622:	682b      	ldr	r3, [r5, #0]
 8001624:	2b00      	cmp	r3, #0
 8001626:	d000      	beq.n	800162a <_fstat_r+0x1e>
 8001628:	6023      	str	r3, [r4, #0]
 800162a:	bd70      	pop	{r4, r5, r6, pc}
 800162c:	200001bc 	.word	0x200001bc

08001630 <_isatty_r>:
 8001630:	2300      	movs	r3, #0
 8001632:	b570      	push	{r4, r5, r6, lr}
 8001634:	4d06      	ldr	r5, [pc, #24]	; (8001650 <_isatty_r+0x20>)
 8001636:	0004      	movs	r4, r0
 8001638:	0008      	movs	r0, r1
 800163a:	602b      	str	r3, [r5, #0]
 800163c:	f7fe ff15 	bl	800046a <_isatty>
 8001640:	1c43      	adds	r3, r0, #1
 8001642:	d103      	bne.n	800164c <_isatty_r+0x1c>
 8001644:	682b      	ldr	r3, [r5, #0]
 8001646:	2b00      	cmp	r3, #0
 8001648:	d000      	beq.n	800164c <_isatty_r+0x1c>
 800164a:	6023      	str	r3, [r4, #0]
 800164c:	bd70      	pop	{r4, r5, r6, pc}
 800164e:	46c0      	nop			; (mov r8, r8)
 8001650:	200001bc 	.word	0x200001bc

08001654 <_sbrk_r>:
 8001654:	2300      	movs	r3, #0
 8001656:	b570      	push	{r4, r5, r6, lr}
 8001658:	4d06      	ldr	r5, [pc, #24]	; (8001674 <_sbrk_r+0x20>)
 800165a:	0004      	movs	r4, r0
 800165c:	0008      	movs	r0, r1
 800165e:	602b      	str	r3, [r5, #0]
 8001660:	f7fe ff18 	bl	8000494 <_sbrk>
 8001664:	1c43      	adds	r3, r0, #1
 8001666:	d103      	bne.n	8001670 <_sbrk_r+0x1c>
 8001668:	682b      	ldr	r3, [r5, #0]
 800166a:	2b00      	cmp	r3, #0
 800166c:	d000      	beq.n	8001670 <_sbrk_r+0x1c>
 800166e:	6023      	str	r3, [r4, #0]
 8001670:	bd70      	pop	{r4, r5, r6, pc}
 8001672:	46c0      	nop			; (mov r8, r8)
 8001674:	200001bc 	.word	0x200001bc

08001678 <memchr>:
 8001678:	b2c9      	uxtb	r1, r1
 800167a:	1882      	adds	r2, r0, r2
 800167c:	4290      	cmp	r0, r2
 800167e:	d101      	bne.n	8001684 <memchr+0xc>
 8001680:	2000      	movs	r0, #0
 8001682:	4770      	bx	lr
 8001684:	7803      	ldrb	r3, [r0, #0]
 8001686:	428b      	cmp	r3, r1
 8001688:	d0fb      	beq.n	8001682 <memchr+0xa>
 800168a:	3001      	adds	r0, #1
 800168c:	e7f6      	b.n	800167c <memchr+0x4>
	...

08001690 <_init>:
 8001690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001692:	46c0      	nop			; (mov r8, r8)
 8001694:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001696:	bc08      	pop	{r3}
 8001698:	469e      	mov	lr, r3
 800169a:	4770      	bx	lr

0800169c <_fini>:
 800169c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800169e:	46c0      	nop			; (mov r8, r8)
 80016a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016a2:	bc08      	pop	{r3}
 80016a4:	469e      	mov	lr, r3
 80016a6:	4770      	bx	lr
